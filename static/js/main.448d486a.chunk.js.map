{"version":3,"sources":["members/MemberService.js","store/actions.js","store/reducers/auth.js","store/reducers/member.js","store/index.js","components/main/Header.js","components/main/MenuSidebar.js","users/AdminService.js","components/button/Button.js","components/modal/MyModal.js","components/modal/SwalSuccess.js","users/UserList.js","components/login/LoginService.js","members/Members.js","members/Konsumen.js","category/CategoryService.js","assets/noPhoto.jpg","category/Category.js","banners/BannerService.js","components/modal/MySelect.js","banners/Banner.js","products/ProductService.js","products/TblProducts.js","products/Product.js","settings/Setting.js","products/ProductForm.js","components/main/Main.js","services/auth.js","components/login/Login.js","router/ProtectedRoute.js","router/PublicRoute.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","process","param","action","axios","post","LOGIN_USER","LOGOUT_USER","LOAD_USER","GET_DATA","VIEW_DETAIL","CryptoJS","require","dt","dt_res","_dt","initialState","isLoggedIn","localStorage","getItem","token","currentUser","id_operator","name","password","reducer","state","type","ActionTypes","AES","decrypt","toString","enc","Utf8","split","setItem","removeItem","getMemberList","errorMessage","members","payload","data","rootReducer","combineReducers","auth","authReducer","membersReducer","store","createStore","connect","user","dispatch","onUserLogout","toggleMenuSidebar","useState","isDropdownOpen","dropdownState","updateDropdownState","dropdownRef","useRef","history","useHistory","toggleDropdown","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","className","to","data-widget","role","onClick","data-toggle","preventDefault","push","MenuSidebar","style","marginTop","data-accordion","icons","facebook","google","googlePlus","sign","edit","delete","AppButton","spinnerTemplate","iconTemplate","children","isLoading","icon","theme","disabled","otherProps","Spinner","as","animation","size","aria-hidden","Button","variant","AppModal","handleClose","title","form","formSubmit","titleButton","themeButton","Modal","onHide","Header","closeButton","Title","Body","Footer","AppSwalSuccess","show","textBody","text","onConfirm","onCancel","onEscapeKey","onOutsideClick","initAdmin","id_admin","username","pass","selected","setSelected","admin","setAdmin","totalData","setTotalData","pageNumb","setPageNumb","pageSize","setPageSize","sortOrder","setSortOrder","sortColumn","setSortColumn","filterValue","setFilterValue","loadTbl","setLoadTbl","setShow","setLoading","deleteForm","setdeleteForm","errMsg","setErrMsg","actionForm","setActionForm","showSwalSuccess","setshowSwalSuccess","columns","key","width","align","sortable","cell","row","index","record","e","editRecord","marginRight","deleteRecord","getData","queryString","AdminService","postDataUsers","then","response","setTimeout","err_code","total_data","catch","console","log","handleSave","userPost","a","contentSwal","created_by","dangerouslySetInnerHTML","__html","updated_by","deleted_by","res","err_msg","error","sort_order","sort_column","keyword","page_number","per_page","formik","useFormik","initialValues","enableReinitialize","validationSchema","Yup","required","onSubmit","values","setSubmitting","resetForm","onReset","frmUser","Form","id","Group","controlId","Control","getFieldProps","Label","touched","errors","value","placeholder","contentDelete","config","key_column","page_size","length_menu","show_filter","show_pagination","pagination","button","excel","print","language","loading_text","records","dynamic","onChange","Object","keys","map","order","column","total_record","loading","backdrop","keyboard","handleSubmit","loginAdmin","_token","Date","encrypt","getProfileAdmin","dt_user","cms","memberList","setMemberList","textAlign","nama","status","Badge","email","phone","MemberService","postData","initData","id_category","category_name","img","imgUpload","errorValidate","categoryList","setCategoryList","Figure","Image","height","alt","product_name","src","NoImg","Caption","CategoryService","_data","FormData","append","handleChange","val","files","match","reader","FileReader","readAsDataURL","onloadend","result","defaultValue","File","setfieldvalue","fileSize","wait","Promise","resolve","reject","customStyles","valueContainer","styles","padding","indicatorsContainer","indicatorSeparator","marginBottom","dropdownIndicator","clearIndicator","control","minHeight","option","borderBottom","paddingTop","paddingBottom","noOptionsMessage","SelectProducts","props","isDisabled","loadOptions","search","loadedOptions","page","url","fetch","json","getAsyncData","ttlDataShow","options","hasMore","additional","label","defaultOptions","myVal","SelectCategory","id_banner","id_product","priority_number","bannerList","setBannerList","href","BannerService","handleChangeNumberOnly","evt","number","validity","valid","Row","Col","pattern","onInput","item","get","TblProducts","harga","thousandSeparator","decimalScale","displayType","diskon_member","qty","productList","setProductList","cookie","Cookies","remove","ProductService","EditRecord","set","yesterday","moment","subtract","valid_startDate","isAfter","ProductForm","selectedIdCNI","setState","dtRes","deskripsi","berat","kondisi","min_pembelian","video_url","special_promo","start_date","end_date","validSd","validEd","validated","isEdit","noImg","bind","onchangeSelect","handleChangeStartDate","handleChangeEndDate","closeSwal","pathName","this","location","pathname","replace","date","selectedDate","_date","format","checked","currentTarget","checkValidity","stopPropagation","noValidate","autoComplete","Feedback","xs","inputMode","isAllowed","inputObj","feedback","setViewDate","inputProps","locale","isValidDate","span","offset","Check","custom","rows","Text","Component","onUserLoad","appLoadingState","updateAppLoading","isMenuSidebarCollapsed","menusidebarState","updateMenusidebarState","fetchProfile","getElementById","classList","add","path","basename","window","substr","lastIndexOf","component","UserList","Konsumen","Category","Product","Banner","exact","Members","Setting","loginByAuth","onUserLogin","isAuthLoading","setAuthLoading","AuthService","data-dismiss","block","rest","render","from","isAuthenticated","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"mbAEIA,EAAUC,2CAcC,M,wFAXX,SAASC,EAAOC,GACZ,OAAQA,GACJ,IAAK,WACD,OAAOC,IAAMC,KAAKL,EAAU,WAAYE,GAC5C,IAAK,cACD,OAAOE,IAAMC,KAAKL,EAAU,kBAAmBE,GACnD,QACI,OAAOE,IAAMC,KAAKL,EAAU,WAAYE,Q,MCV3CI,EAAa,aACbC,EAAc,cACdC,EAAY,YACZC,EAAW,WACXC,EAAc,cCJ3B,IAAMC,EAAWC,EAAQ,KAGrBC,EAAK,GACLC,EAAS,GACTC,EAAM,GAEJC,EAAe,CACjBC,aAAcC,aAAaC,QAAQ,YACnCC,MAAOF,aAAaC,QAAQ,YAC5BE,YAAa,CACTC,YAAa,KACbC,KAAM,GACNC,SAAU,OA2CHC,EAvCC,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcb,EAAW,uCAC9C,OAAQA,EAAOwB,MACX,KAAKC,EAKD,OAJAf,EAAKF,EAASkB,IAAIC,QAAQ3B,EAAOiB,MAnB3BnB,OAoBNa,EAASD,EAAGkB,SAASpB,EAASqB,IAAIC,MAClClB,EAAMD,EAAOoB,MAAM,QACnBhB,aAAaiB,QAAQ,WAAYhC,EAAOiB,OACjC,2BACAM,GADP,IAEIT,YAAY,EACZG,MAAOjB,EAAOiB,MACdC,YAAa,CACTC,YAAaP,EAAI,GACjBQ,KAAMR,EAAI,GACVS,SAAU,QAGtB,KAAKI,EAED,OADAV,aAAakB,WAAW,YACjB,2BACAV,GADP,IAEIT,YAAY,EACZG,MAAO,KACPC,YAAa,CACTC,YAAa,KACbC,KAAM,GACNC,SAAU,QAGtB,KAAKI,EACD,OAAO,2BACAF,GADP,IAEIL,YAAalB,EAAOkB,cAE5B,QACI,OAAO,eAAKK,KCrDlBV,EAAe,CACjBqB,cAAe,KACfC,cAAc,GAsBHC,EAnBC,WAAmC,IAAlCb,EAAiC,uDAAzBV,EAAcb,EAAW,uCAC9C,OAAQA,EAAOwB,MACX,KAAKC,EACD,OAAO,2BACAF,GADP,IAEIW,cAAelC,EAAOqC,QAAQC,KAC9BH,aAAcnC,EAAOqC,QAAQF,eAGrC,KAAKV,EACD,OAAO,2BACAF,GADP,IAEIL,YAAalB,EAAOkB,cAE5B,QACI,OAAO,eAAKK,KCjBlBgB,EAAcC,YAAgB,CAChCC,KAAMC,EACNN,QAAQO,IAIGC,EADDC,YAAYN,G,uDCmFXO,eARS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,gBAGM,SAAC8B,GAAD,MAAe,CACtCC,aAAc,kBAAMD,EAAS,CAAExB,KAAM,oBAG1BsB,EAxFA,SAAC,GAA8C,EAA5CI,kBAA6C,IAA1BH,EAAyB,EAAzBA,KAAME,EAAmB,EAAnBA,aAAmB,EAEbE,mBAAS,CAClDC,gBAAgB,IAHsC,mBAEnDC,EAFmD,KAEpCC,EAFoC,KAKpDC,EAAcC,iBAAO,MACrBC,EAAUC,cACVC,EAAiB,WACnBL,EAAoB,CAAEF,gBAAiBC,EAAcD,kBAGnDQ,EAAqB,SAACC,GAEpBN,GACAA,EAAYO,UACXP,EAAYO,QAAQC,SAASF,EAAMG,SAEpCV,EAAoB,CAAEF,gBAAgB,KAI9Ca,qBAAU,WAEN,OADAC,SAASC,iBAAiB,YAAaP,GAAoB,GACpD,WACHM,SAASE,oBACL,YACAR,GACA,OAiBZ,OACI,sBAAKS,UAAU,mFAAf,UACI,oBAAIA,UAAU,aAAd,SACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,WAAWE,cAAY,WAAWC,KAAK,SAAjE,SACI,mBAAGH,UAAU,sBAMzB,oBAAIA,UAAU,qBAAd,SACI,qBAAIA,UAAU,oBAAd,UACI,eAAC,IAAD,CACIC,GAAG,IACHG,QAASd,EACTnC,KAAK,SACL6C,UAAU,2BACVK,cAAY,WALhB,UAMI,mBAAGL,UAAU,gBANjB,IAMmCtB,EAAK3B,KAAQ2B,EAAK3B,KAAS,YAG9D,qBAAKiD,UAAU,gBAAf,SACI,eAAC,IAAD,CACIC,GAAG,IACHG,QA/BT,SAACZ,GACZF,IACAE,EAAMc,iBACN1B,IACAQ,EAAQmB,KAAK,WA4BOP,UAAU,gBAHd,UAII,mBAAGA,UAAU,uBAJjB,0BCiDTQ,EArHK,WAIhB,OACI,wBAAOR,UAAU,gDAAjB,UAEI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,yBAA1B,SACI,sBAAMA,UAAU,aAAhB,SAA6B,mDAIjC,qBAAKA,UAAU,UAAf,SAEI,qBAAKA,UAAU,OAAOS,MAAO,CAAEC,UAAW,kBAA1C,SACI,qBAAIV,UAAU,gDAAgDE,cAAY,WAAWC,KAAK,OAAOQ,iBAAe,QAAhH,UACI,qBAAIX,UAAU,WAAd,UACI,eAAC,IAAD,CACIC,GAAG,WACHE,KAAK,SACLH,UAAU,WAHd,UAII,mBAAGA,UAAU,yBACb,iDAAmB,mBAAGA,UAAU,kCAGpC,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,WACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,+BACb,6CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,YACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,+BACb,oDAShB,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,YACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,4BACb,8CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,YACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,4BACb,8CAIR,qBAAIA,UAAU,WAAd,UACI,eAAC,IAAD,CACIC,GAAG,WACHE,KAAK,SACLH,UAAU,WAHd,UAII,mBAAGA,UAAU,yBACb,8CAAgB,mBAAGA,UAAU,kCAGjC,qBAAIA,UAAU,mBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,WACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,+BACb,6CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,SACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,+BACb,2CAIR,oBAAIA,UAAU,WAAd,SACI,eAAC,IAAD,CACIC,GAAG,WACHD,UAAU,WAFd,UAGI,mBAAGA,UAAU,+BACb,8D,iBCrGpCxE,EAAUC,2CAkBC,M,6FAfX,SAAcC,EAAOC,GACjB,OAAQA,GACJ,IAAK,WACD,OAAOC,IAAMC,KAAKL,EAAU,SAAUE,GAC1C,IAAK,WACD,OAAOE,IAAMC,KAAKL,EAAU,gBAAiBE,GACjD,IAAK,YACD,OAAOE,IAAMC,KAAKL,EAAU,cAAeE,GAC/C,IAAK,cACD,OAAOE,IAAMC,KAAKL,EAAU,aAAcE,GAC9C,QACI,OAAOE,IAAMC,KAAKL,EAAU,gBAAiBE,Q,kDCZvDkF,EAAQ,CACVC,SAAU,kBACVC,OAAQ,gBACRC,WAAY,qBACZC,KAAM,mBACNC,KAAM,aACNC,OAAS,eA6CEC,EA1CG,SAAC,GAOZ,IACCC,EACAC,EARJC,EAME,EANFA,SACAC,EAKE,EALFA,UACAC,EAIE,EAJFA,KAIE,IAHFC,aAGE,MAHM,UAGN,EAFFC,EAEE,EAFFA,SACGC,EACD,kEAqBF,OAjBIJ,IACAH,EACI,cAACQ,EAAA,EAAD,CACI5B,UAAU,OACV6B,GAAG,OACHC,UAAU,SACVC,KAAK,KACL5B,KAAK,SACL6B,cAAY,UAKpBR,GAAQZ,EAAMY,KACdH,EAAe,mBAAGrB,UAAS,UAAKY,EAAMY,GAAX,YAK3B,cADA,CACCS,EAAA,EAAD,2BACQN,GADR,IAEIO,QAAST,EACTC,SAAUH,GAAaG,EAH3B,UAKKL,EACAC,EACAF,OCTEe,EArCE,SAAC,GAUZ,EATFb,SASG,IARHc,EAQE,EARFA,YACAC,EAOE,EAPFA,MACAd,EAME,EANFA,UACAe,EAKE,EALFA,KACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,YACAC,EAEE,EAFFA,YACGd,EACD,8GACF,OAEI,cADA,CACCe,EAAA,EAAD,2BACQf,GADR,IAEIgB,OAAQP,EAFZ,UAII,cAACM,EAAA,EAAME,OAAP,CAAcC,aAAW,EAAzB,SACI,cAACH,EAAA,EAAMI,MAAP,UAAcT,MAElB,cAACK,EAAA,EAAMK,KAAP,UAAaT,IACb,eAACI,EAAA,EAAMM,OAAP,WACI,cAAC,EAAD,CAAQvB,MAAM,OAAOrB,QAASgC,EAA9B,mBAGA,cAAC,EAAD,CACIb,UAAWA,EACXE,MAAOgB,EACPrC,QAASmC,EAHb,SAKKC,GAA4B,gB,oCC9BpCS,GAAiB,SAAC,GAWxB,IAVHC,EAUE,EAVFA,KAEAd,GAQE,EATFd,SASE,EARFc,aACAC,EAOE,EAPFA,MACAlF,EAME,EANFA,KACAgG,EAKE,EALFA,SAIGxB,GACD,EAJFY,WAIE,EAHFC,YAGE,EAFFC,YAEE,qHACF,OACI,cAAC,KAAD,2BACQd,GADR,IAEIuB,KAAMA,EACN/F,KAAMA,EACNkF,MAAOA,EACPe,KAAMD,EACNE,UAAWjB,EACXkB,SAAUlB,EACVmB,YAAanB,EACboB,eAAgBpB,MCgWb3D,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EAnWE,SAACL,GAEd,IAAMqF,EAAY,CAAEC,SAAU,GAAIC,SAAU,GAAIC,KAAM,GAAI7G,KAAM,IAFzC,EAGS+B,mBAAS2E,GAHlB,mBAGhBI,EAHgB,KAGNC,EAHM,OAIGhF,mBAAS,IAJZ,mBAIhBiF,EAJgB,KAITC,EAJS,OAKWlF,mBAAS,GALpB,mBAKhBmF,EALgB,KAKLC,EALK,OAMSpF,mBAAS,GANlB,mBAMhBqF,EANgB,KAMNC,EANM,OAOStF,mBAAS,IAPlB,mBAOhBuF,EAPgB,KAONC,EAPM,OAQWxF,mBAAS,OARpB,mBAQhByF,EARgB,KAQLC,EARK,OASa1F,mBAAS,QATtB,mBAShB2F,EATgB,KASJC,EATI,OAUe5F,mBAAS,IAVxB,mBAUhB6F,EAVgB,KAUHC,EAVG,OAWO9F,oBAAS,GAXhB,mBAWhB+F,EAXgB,KAWPC,EAXO,OAYChG,oBAAS,GAZV,mBAYhBoE,EAZgB,KAYV6B,GAZU,QAaSjG,oBAAS,GAblB,qBAahByC,GAbgB,MAaLyD,GAbK,SAcalG,oBAAS,GAdtB,qBAchBmG,GAdgB,MAcJC,GAdI,SAeKpG,mBAAS,IAfd,qBAehBqG,GAfgB,MAeRC,GAfQ,SAgBatG,mBAAS,MAhBtB,qBAgBhBuG,GAhBgB,MAgBJC,GAhBI,SAiBuBxG,oBAAS,GAjBhC,qBAiBhByG,GAjBgB,MAiBCC,GAjBD,MAmBjBpD,GAAc,WAChB2C,IAAQ,GACRG,IAAc,IAeZO,GAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAkB7B,EAAW,GAAKE,EAAY2B,EAAQ,EAAI,KAChED,IAAK,GAET,CACIL,IAAK,OACLtC,KAAM,OACNyC,UAAU,GAEd,CACIH,IAAK,WACLtC,KAAM,WACNyC,UAAU,GAEd,CACIH,IAAK,SACLtC,KAAM,SACNuC,MAAO,IACPE,UAAU,EACVC,KAAM,SAAAG,GACF,OACI,eAAC,WAAD,WACI,yBACIjG,UAAU,yBACVI,QAAS,SAAA8F,GAAC,OAAIC,GAAWF,IACzBxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,eAJjB,WAMA,yBACIA,UAAU,wBACVI,QAAS,kBAAMiG,GAAaJ,IAFhC,UAGI,mBAAGjG,UAAU,gBAHjB,mBA0BdmG,GAAa,SAACF,GAChBnC,EAAYmC,GACZlB,IAAQ,GACRO,GAAc,cAGZe,GAAe,SAACJ,GAClBnC,EAAYmC,GACZf,IAAc,GACdI,GAAc,gBAqBZgB,GAAU,SAACC,GACbzB,GAAW,GACX0B,EAAaC,cAAcF,EAAa,YACnCG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACd7C,EAAS2C,EAAS1I,KAAKA,MACvBiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACd7C,EAAS,IACTE,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,OAIlBgB,GAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACXP,EAAW,GACXQ,EAAc,IAClBrC,IAAW,GACXI,GAAU,MACS,aAAfC,KACA8B,EAASG,WAAalJ,EAAKM,KAAK5B,YAChCuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,gHAEvC,cAAfnC,KACA8B,EAASM,WAAarJ,EAAKM,KAAK5B,YAChCuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,mIAEvC,gBAAfnC,KACA8B,EAAW,GACXA,EAAW,CACPzD,SAAUG,EAASH,SACnBgE,WAAYtJ,EAAKM,KAAK5B,aAE1BuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,4GAnB3C,SAqBThB,EAAaC,cAAcU,EAAU9B,IAAYqB,MAAK,SAACiB,GACzDd,EAAWc,EAAI1J,KAAK4I,SACpB7B,IAAW,GACM,OAAb6B,GAIA9B,IAAQ,GACRG,IAAc,GACdE,GAAUiC,GACV7B,IAAmB,IANnBJ,GAAUuC,EAAI1J,KAAK2J,YAQxBb,OAAM,SAACc,GACN7C,IAAW,GACXI,GAAUyC,MAnCC,2CAAH,sDAuChBjI,qBAAU,WAQN0G,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,MAGf,CAACF,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAAMwD,GAASC,YAAU,CACrBC,cAAexE,EACfyE,oBAAoB,EACpBC,iBAAkBC,IAAW,CACzBzL,KAAMyL,MACDC,SAAS,yBACd9E,SAAU6E,MACLC,SAAS,yBACd7E,KAAM4E,MACDC,SAAS,+BAElBC,SAAU,SAACC,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,UAChC3B,GAAWyB,GACXE,EAAU,IACVD,GAAc,IAElBE,QAAS,SAACH,EAAD,GAA2C,IAAhCC,EAA+B,EAA/BA,cAA+B,EAAhBC,UAC/BD,GAAc,MAWhBG,GAAU,eAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,UAKZ,cAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,SACI,cAACH,EAAA,EAAKI,QAAN,aAAcjM,KAAK,UAAagL,GAAOkB,cAAc,gBAEzD,eAACL,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,uBACCnB,GAAOoB,QAAQxM,MAAQoL,GAAOqB,OAAOzM,KACjC,sBAAMiD,UAAU,4CAAhB,SAA6DmI,GAAOqB,OAAOzM,OAAgB,KAChG,cAACiM,EAAA,EAAKI,QAAN,aAAcrM,KAAK,OAAOgF,KAAK,KAAK0H,MAAM,WAAWtM,KAAK,OAAOuM,YAAY,YAAevB,GAAOkB,cAAc,aAErH,eAACL,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,uBACCnB,GAAOoB,QAAQ5F,UAAYwE,GAAOqB,OAAO7F,SACrC,sBAAM3D,UAAU,4CAAhB,SAA6DmI,GAAOqB,OAAO7F,WAAoB,KACpG,cAACqF,EAAA,EAAKI,QAAN,aAAcrH,KAAK,KAAK5E,KAAK,OAAOuM,YAAY,YAAevB,GAAOkB,cAAc,iBAExF,eAACL,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,uBACCnB,GAAOoB,QAAQ3F,MAAQuE,GAAOqB,OAAO5F,KACjC,sBAAM5D,UAAU,4CAAhB,SAA6DmI,GAAOqB,OAAO5F,OAAgB,KAChG,cAACoF,EAAA,EAAKI,QAAN,aAAcrH,KAAK,KAAK5E,KAAK,OAAOuM,YAAY,YAAevB,GAAOkB,cAAc,gBAItFM,GAAgB,qBAAKpC,wBAAyB,CAAEC,OAAQ,uGAE9D,OACI,gCACI,sBAAKxH,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,+BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,cAAf,SACI,eAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QA5DvC,WACnBkF,GAAc,YACdxB,EAAYL,GACZ0E,GAAOU,YACP9D,IAAQ,IAwDwB,UAAmD,mBAAG/E,UAAU,eAAhE,YAUJ,qBAAKA,UAAU,YAAf,SACK+D,EAAS,cAAC,IAAD,CACN6F,OAlNzB,CACXC,WAAY,WACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CAuMkBC,QAASzG,EACT0B,QAASA,GACTgF,SAAS,EACTC,SA1Lb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MA4KyBsF,aAAc/G,EACdgH,QAASpG,IACN,wDAY/B,cAAC,EAAD,CACI3B,KAAMA,EACNnB,KAAK,KACLO,KAAMyG,GACN3G,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,gBACNG,YAAY,cACZC,YAAY,UACZlB,UAAWA,GACXgB,WAAY4F,GAAOiD,eAGtB7F,GAAmB,cAAC,GAAD,CAChBrC,KAAMqC,GACNlD,MAAO8C,GACPhI,KAAK,UACLiF,YA/SE,WACdoD,IAAmB,GAQnBc,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,OA0Se,GAErB,cAAC,EAAD,CACInB,KAAM+B,GACNlD,KAAK,KACLO,KAAMqH,GACNvH,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,cACNG,YAAY,cACZC,YAAY,SACZlB,UAAWA,GACXgB,WAAY2E,QAGpB,8BC7WN1L,I,OAAUC,4CACVU,GAAWC,EAAQ,KAGZiP,GAAU,uCAAG,WAAO1H,EAAUC,GAAjB,iBAAAwD,EAAA,6DAChB1L,EAAQ,CACViI,SAAUA,EACVC,KAAMA,GAENhH,EAAQ,GALU,SAMhBhB,IAAMC,KAAKL,GAAU,eAAgBE,GAAOgL,MAAK,SAAAiB,GACnD,IAAMhB,EAAWgB,EAAI1J,KACrB,GAA0B,OAAtB0I,EAASE,SAAmB,CAC5B,IAAI5I,EAAO0I,EAAS1I,KAIdqN,EAHSrN,EAAKyF,SAGM,OAFfzF,EAAKlB,KAEuB,OAD7B,IAAIwO,KAEd3O,EAAQT,GAASkB,IAAImO,QAAQF,EAhBvB7P,OAgB0C8B,gBAEhDX,EAAQ,MAhBM,gCAmBfA,GAnBe,2CAAH,wDAsBV6O,GAAe,uCAAG,sCAAArE,EAAA,6DACrBxK,EAAQF,aAAaC,QAAQ,YAC7BN,EAAKF,GAASkB,IAAIC,QAAQV,EA1BlBnB,OA2BRa,EAASD,EAAGkB,SAASpB,GAASqB,IAAIC,MAClClB,EAAMD,EAAOoB,MAAM,QACrBgO,EAAU,CACV5O,YAAa,KACbC,KAAM,GACNC,SAAU,MAERtB,EAAQ,CACVgI,SAAUnH,EAAI,GACdoP,IAAK,GAZkB,SAcrB/P,IAAMC,KAAKL,GAAU,gBAAiBE,GAAOgL,MAAK,SAAAiB,GACpD,IAAMhB,EAAWgB,EAAI1J,KACrB,GAA0B,OAAtB0I,EAASE,SAAmB,CAC5B,IAAI5I,EAAO0I,EAAS1I,KACpByN,EAAU,CACN5O,YAAamB,EAAKyF,SAClB3G,KAAMkB,EAAKlB,KACXC,SAAU,UArBK,gCAyBpB0O,GAzBoB,2CAAH,qD,UCmLbjN,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EA1MC,SAACL,GAAU,IAAD,EACcU,mBAAS,IADvB,mBACf8M,EADe,KACHC,EADG,OAEY/M,mBAAS,GAFrB,mBAEfmF,EAFe,KAEJC,EAFI,OAGUpF,mBAAS,GAHnB,mBAGfqF,EAHe,KAGLC,EAHK,OAIUtF,mBAAS,IAJnB,mBAIfuF,EAJe,KAILC,EAJK,OAKYxF,mBAAS,OALrB,mBAKfyF,EALe,KAKJC,EALI,OAMc1F,mBAAS,QANvB,mBAMf2F,EANe,KAMHC,EANG,OAOgB5F,mBAAS,IAPzB,mBAOf6F,EAPe,KAOFC,EAPE,OAQQ9F,oBAAS,GARjB,mBAQf+F,EARe,KAQNC,EARM,KAgChBW,EAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAgB,qBAAKvF,MAAO,CAAEqL,UAAW,UAAzB,UAAwC3H,EAAW,GAAKE,EAAY2B,EAAQ,EAAI,OACtGD,IAAK,GAET,CACIL,IAAK,SACLtC,KAAM,SACNwC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GACF,OAAQ,eAAC,WAAD,eAAYA,EAAO8F,KAAnB,IAAyB,uBACV,IAAlB9F,EAAO+F,OAAgB,cAACC,GAAA,EAAD,CAAO/J,QAAQ,UAAf,sBAA6C,QAIjF,CACIwD,IAAK,OACLtC,KAAM,WACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,QACLtC,KAAM,UACNwC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GAAY,OAAQ,eAAC,WAAD,eAAYA,EAAOiG,MAAnB,IAA0B,uBAAM,sCAAhC,MAAgDjG,EAAOkG,WAErF,CACIzG,IAAK,UACLtC,KAAM,WACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,SACLtC,KAAM,SACNuC,MAAO,GACPE,UAAU,EACVD,MAAO,SACPE,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,cAAC,WAAD,UACI,yBAAQpK,UAAQ,EACZ1B,UAAU,sBACVI,QAAS,SAAA8F,GAAC,OAAIC,EAAWF,IACzBxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,cAJjB,kBA6BxBJ,qBAAU,WACN,IArGa2G,IAqGC,CACVuB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,EACVlH,KAAM,GA1GV2H,GAAW,GACXsH,EAAcC,SAAS9F,GAClBG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACdgF,EAAclF,EAAS1I,KAAKA,MAC5BiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACdgF,EAAc,IACd3H,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,QA6FrB,CAAC/B,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAAMwB,EAAa,SAACF,GAChBe,QAAQC,IAAIhB,IAqBhB,OACI,gCACI,sBAAKjG,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,6BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,qBAAKA,UAAU,8BAAf,SAEI,qBAAKA,UAAU,YAAf,SACK4L,EAAc,cAAC,IAAD,CACXhC,OA3EzB,CACXC,WAAY,YACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CAgEkBC,QAASoB,EACTnG,QAASA,EACTgF,SAAS,EACTC,SA/Cb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MAiCyBsF,aAAc/G,EACdgH,QAASpG,IACN,0DAenC,8BCEGpG,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EAnMC,SAACL,GAAU,IAAD,EACcU,mBAAS,IADvB,mBACf8M,EADe,KACHC,EADG,OAEY/M,mBAAS,GAFrB,mBAEfmF,EAFe,KAEJC,EAFI,OAGUpF,mBAAS,GAHnB,mBAGfqF,EAHe,KAGLC,EAHK,OAIUtF,mBAAS,IAJnB,mBAIfuF,EAJe,KAILC,EAJK,OAKYxF,mBAAS,OALrB,mBAKfyF,EALe,KAKJC,EALI,OAMc1F,mBAAS,QANvB,mBAMf2F,EANe,KAMHC,EANG,OAOgB5F,mBAAS,IAPzB,mBAOf6F,EAPe,KAOFC,EAPE,OAQQ9F,oBAAS,GARjB,mBAQf+F,EARe,KAQNC,EARM,KA+BhBW,EAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAgB,qBAAKvF,MAAO,CAAEqL,UAAW,UAAzB,UAAwC3H,EAAW,GAAKE,EAAY2B,EAAQ,EAAI,OACtGD,IAAK,GAGT,CACIL,IAAK,OACLtC,KAAM,WACNwC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GACF,OAAQ,eAAC,WAAD,eAAYA,EAAO8F,KAAnB,IAAyB,uBACV,IAAlB9F,EAAO+F,OAAgB,sBAAMhM,UAAU,sBAAhB,sBAAyD,QAI7F,CACI0F,IAAK,QACLtC,KAAM,QACNwC,MAAO,SACPC,UAAU,GAGd,CACIH,IAAK,QACLtC,KAAM,QACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,SACLtC,KAAM,SACNuC,MAAO,GACPE,UAAU,EACVD,MAAO,SACPE,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,cAAC,WAAD,UACI,yBAAQpK,UAAQ,EACZ1B,UAAU,sBACVI,QAAS,SAAA8F,GAAC,OAAIC,EAAWF,IACzBxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,cAJjB,kBA4BxBJ,qBAAU,WACN,IA/Fa2G,IA+FC,CACVuB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,EACVlH,KAAM,GApGV2H,GAAW,GACXsH,EAAcC,SAAS9F,GAClBG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACdgF,EAAclF,EAAS1I,KAAKA,MAC5BiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACdgF,EAAc,IACd3H,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,QAuFrB,CAAC/B,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAAMwB,EAAa,SAACF,GAChBe,QAAQC,IAAIhB,IAqBhB,OACI,gCACI,sBAAKjG,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,8BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,qBAAKA,UAAU,8BAAf,SAEI,qBAAKA,UAAU,YAAf,SACK4L,EAAc,cAAC,IAAD,CACXhC,OA3EzB,CACXC,WAAY,YACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CAgEkBC,QAASoB,EACTnG,QAASA,EACTgF,SAAS,EACTC,SA/Cb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MAiCyBsF,aAAc/G,EACdgH,QAASpG,IACN,0DAenC,8B,SC5LRrJ,GAAUC,2CAoBC,O,wFAjBX,SAASC,EAAOC,GAGZ,OAFAqL,QAAQC,IAAIvL,GAEJC,GACJ,IAAK,WACD,OAAOC,IAAMC,KAAKL,GAAU,YAAaE,GAC7C,IAAK,WAEL,IAAK,YACD,OAAOE,IAAMC,KAAKL,GAAU,mBAAoBE,GACpD,IAAK,cACD,OAAOE,IAAMC,KAAKL,GAAU,gBAAiBE,GACjD,QACI,OAAOE,IAAMC,KAAKL,GAAU,YAAaE,Q,gBClB1C,OAA0B,oCCia1B+C,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EAxZE,SAACL,GACd,IAAMkO,EAAW,CAAEC,YAAa,GAAIC,cAAe,GAAIC,IAAK,GAAIC,UAAW,IACrEC,EAAgB,CAAEF,IAAK,GAAID,cAAe,IAFzB,EAGS1N,mBAASwN,GAHlB,mBAGhBzI,EAHgB,KAGNC,EAHM,OAIiBhF,mBAAS,IAJ1B,mBAIhB8N,EAJgB,KAIFC,EAJE,OAKW/N,mBAAS,GALpB,mBAKhBmF,EALgB,KAKLC,EALK,OAMSpF,mBAAS,GANlB,mBAMhBqF,EANgB,KAMNC,EANM,OAOStF,mBAAS,IAPlB,mBAOhBuF,EAPgB,KAONC,EAPM,OAQWxF,mBAAS,OARpB,mBAQhByF,EARgB,KAQLC,EARK,OASa1F,mBAAS,iBATtB,mBAShB2F,EATgB,KASJC,EATI,OAUe5F,mBAAS,IAVxB,mBAUhB6F,EAVgB,KAUHC,EAVG,OAWO9F,oBAAS,GAXhB,mBAWhB+F,EAXgB,KAWPC,EAXO,OAYChG,oBAAS,GAZV,mBAYhBoE,EAZgB,KAYV6B,EAZU,OAaSjG,oBAAS,GAblB,oBAahByC,GAbgB,MAaLyD,GAbK,SAcalG,oBAAS,GAdtB,qBAchBmG,GAdgB,MAcJC,GAdI,SAeKpG,mBAAS6N,GAfd,qBAehBxH,GAfgB,MAeRC,GAfQ,SAgBatG,mBAAS,MAhBtB,qBAgBhBuG,GAhBgB,MAgBJC,GAhBI,SAiBuBxG,oBAAS,GAjBhC,qBAiBhByG,GAjBgB,MAiBCC,GAjBD,MAmBjBpD,GAAc,WAChB2C,GAAQ,GACRG,IAAc,IAeZO,GAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAgB,qBAAKvF,MAAO,CAAEqL,UAAW,UAAzB,UAAwC3H,EAAW,GAAKE,EAAY2B,EAAQ,EAAI,OACtGD,IAAK,GAET,CACIL,IAAK,gBACLtC,KAAM,WACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,MACLtC,KAAM,QACNwC,MAAO,SACPC,UAAU,EACVF,MAAO,IACPG,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,eAACgB,GAAA,EAAD,WACI,cAACA,GAAA,EAAOC,MAAR,CACIpH,MAAO,IACPqH,OAAQ,IACRC,IAAKhH,EAAOiH,aACZC,IAAKlH,EAAOwG,IAAOxG,EAAOwG,IAAQW,KAGtC,cAACN,GAAA,EAAOO,QAAR,UACKpH,EAAOiH,sBAKhC,CACIxH,IAAK,SACLtC,KAAM,SACNuC,MAAO,IACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GACF,OACI,eAAC,WAAD,WACI,yBACIjG,UAAU,yBACVI,QAAS,SAAA8F,GAAC,OAAIC,GAAWF,IACzBxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,eAJjB,WAMA,yBACIA,UAAU,wBACVI,QAAS,kBAAMiG,GAAaJ,IAFhC,UAGI,mBAAGjG,UAAU,gBAHjB,mBA0BdmG,GAAa,SAACF,GAChBX,GAAc,aACdxB,EAAY,2BAAKmC,GAAN,IAAcyG,UAAWzG,EAAOwG,OAC3CrH,GAAUuH,GACV5H,GAAQ,IAGNsB,GAAe,SAACJ,GAClBb,GAAUuH,GACV7I,EAAYmC,GACZX,GAAc,eACdJ,IAAc,IAqBZoB,GAAO,uCAAG,WAAOC,GAAP,SAAAa,EAAA,6DACZtC,GAAW,GADC,SAENwI,GAAgBjB,SAAS9F,GAC1BG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACdgG,EAAgBlG,EAAS1I,KAAKA,MAC9BiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACdgG,EAAgB,IAChB3I,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,MAjBR,2CAAH,sDAqBPgB,GAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACXP,EAAW,GACXQ,EAAc,IAClBrC,IAAW,GACXI,GAAUuH,IACNY,EAAQ,IAAIC,UACVC,OAAO,cAAetG,EAASoF,aAClB,aAAflH,KACAkI,EAAME,OAAO,MAAOtG,EAASsF,KAC7Bc,EAAME,OAAO,aAAcrP,EAAKM,KAAK5B,aACrCyQ,EAAME,OAAO,gBAAiBtG,EAASqF,eACvCnF,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,gHAEvC,cAAfnC,KACAkI,EAAME,OAAO,MAAOtG,EAASsF,KAC7Bc,EAAME,OAAO,aAAcrP,EAAKM,KAAK5B,aACrCyQ,EAAME,OAAO,gBAAiBtG,EAASqF,eACvCnF,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,mIAEvC,gBAAfnC,KACAkI,EAAQ,GACRA,EAAQ,CACJhB,YAAa1I,EAAS0I,YACtB7E,WAAYtJ,EAAKM,KAAK5B,aAE1BuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,4GAzB3C,UA4BT8F,GAAgBjB,SAASkB,EAAOlI,IAAYqB,MAAK,SAACiB,GACpDd,EAAWc,EAAI1J,KAAK4I,SACpB7B,IAAW,GACM,OAAb6B,GAIA9B,GAAQ,GACRG,IAAc,GACdE,GAAUiC,GACV7B,IAAmB,IANnBJ,GAAUuC,EAAI1J,KAAK2J,YAQxBb,OAAM,SAACc,GACN7C,IAAW,GACXI,GAAUyC,MA1CC,4CAAH,sDA6DhBjI,qBAAU,WAQN0G,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,MAGf,CAACF,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAQM+I,GAAe,SAAAlO,GAAU,IAAD,EACFA,EAAMG,OAAtB5C,EADkB,EAClBA,KACJ4Q,EAFsB,EACZlE,MAGd,GADArE,GAAUuH,GACgB,QAAtBnN,EAAMG,OAAO5C,KAAgB,CAG7B,GAFA4Q,EAAMnO,EAAMG,OAAOiO,MAAM,GACzB9J,EAAY,2BAAKD,GAAN,IAAgB6I,UAAW,GAAID,IAAK,OAC1CkB,EAAK,OACV,IAAKA,EAAI5Q,KAAK8Q,MAAM,qBAGhB,OAFAzI,GAAU,CAAEqH,IAAK,oDACjBzH,IAAW,GAGf,GAAI2I,EAAI5L,KAAO,QAGX,OAFAqD,GAAU,CAAEqH,IAAK,4BACjBzH,IAAW,GAGf,IAAI8I,EAAS,IAAIC,WACjBD,EAAOE,cAAcL,GACrBG,EAAOG,UAAY,WACfnK,EAAY,2BAAKD,GAAN,IAAgB6I,UAAWoB,EAAOI,OAAQzB,IAAKkB,MAGlE7J,EAAY,2BACLD,GADI,mBAEN9G,EAAO4Q,MAIV5E,GAAU,eAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,UACZ,cAACD,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,SACI,cAACH,EAAA,EAAKI,QAAN,CAAcjM,KAAK,SAASgR,aAActK,EAAS0I,gBAEvD,eAACvD,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,uBAAkCnE,GAAOqH,cACpC,sBAAMxM,UAAU,4CAAhB,SAA6DmF,GAAOqH,gBAAyB,GAClG,cAACxD,EAAA,EAAKI,QAAN,CAAcrH,KAAK,KAAKhF,KAAK,gBAAgBI,KAAK,OAAOsM,MAAO5F,EAAS2I,cAAe9B,SAAUgD,GAAchE,YAAY,gBAEhI,eAACV,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,oBAA+BnE,GAAOsH,IACjC,sBAAMzM,UAAU,4CAAhB,SAA6DmF,GAAOsH,MAAe,GACxF,cAACzD,EAAA,EAAKoF,KAAN,CAAWrM,KAAK,KAAKhF,KAAK,MAAMsR,cAAexK,EAAS4I,IAAK/B,SAAUgD,QAE1E7J,EAAS6I,UAAa,cAAC1D,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,SACnB,cAAC2D,GAAA,EAAD,UACI,cAACA,GAAA,EAAOC,MAAR,CACIpH,MAAO,IACPqH,OAAQ,IACRC,IAAI,GACJE,IAAKtJ,EAAS6I,gBAGT,MAKf/C,GAAgB,qBAAKpC,wBAAyB,CAAEC,OAAQ,uGAE9D,OACI,gCACI,sBAAKxH,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,8BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,cAAf,SACI,eAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QA3FvC,WACnBkF,GAAc,YACdxB,EAAYwI,GACZtH,IAAW,GACXD,GAAQ,GACRK,GAAUuH,IAsFsB,UAAmD,mBAAG3M,UAAU,eAAhE,YAUJ,qBAAKA,UAAU,YAAf,SACK4M,EAAgB,cAAC,IAAD,CACbhD,OApPzB,CACXC,WAAY,cACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CAyOkBC,QAASoC,EACTnH,QAASA,GACTgF,SAAS,EACTC,SA1Nb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MA4MyBsF,aAAc/G,EACdgH,QAASpG,IACN,wDAY/B,cAAC,EAAD,CACI3B,KAAMA,EACNZ,KAAMyG,GACN3G,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,oBACNG,YAAY,cACZC,YAAY,UACZlB,UAAWA,GACXgB,WA9JK,WACjB,IAAI+L,EAAWzK,EAAS4I,IAAI1K,KACxB8F,EAAQ,KACmB,OAA3BhE,EAAS2I,eAAqD,KAA3B3I,EAAS2I,gBAC5C3E,EAAK,2BAAQA,GAAR,IAAe2E,cAAe,gCAEnC3I,EAAS4I,KACL6B,EAAW,UACXzG,EAAK,2BAAQA,GAAR,IAAe4E,IAAK,wBAGjCrH,GAAUyC,GACLA,GAAOX,GAAWrD,MAqJd0B,GAAmB,cAAC,GAAD,CAChBrC,KAAMqC,GACNlD,MAAO8C,GACPhI,KAAK,UACLiF,YApWE,WACdoD,IAAmB,GAQnBc,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,OA+Ve,GAErB,cAAC,EAAD,CACInB,KAAM+B,GACNlD,KAAK,KACLO,KAAMqH,GACNvH,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,cACNG,YAAY,cACZC,YAAY,SACZlB,UAAWA,GACXgB,WAAY2E,QAGpB,8BCrZR1L,GAAUC,2CAmBC,O,wFAhBX,SAASC,EAAOC,GAEZ,OAAQA,GACJ,IAAK,WACD,OAAOC,IAAMC,KAAKL,GAAU,UAAWE,GAC3C,IAAK,WAEL,IAAK,YACD,OAAOE,IAAMC,KAAKL,GAAU,iBAAkBE,GAClD,IAAK,cACD,OAAOE,IAAMC,KAAKL,GAAU,cAAeE,GAC/C,QACI,OAAOE,IAAMC,KAAKL,GAAU,UAAWE,Q,0BCdjD6S,GAAO,WACT,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB9H,YAAW,WACP6H,MACD,SAILE,GAAe,CACjBC,eAAgB,SAACC,GAAD,mBAAC,eACVA,GADS,IACDC,QAAS,aAExBC,oBAAqB,SAACF,GAAD,mBAAC,eACfA,GADc,IACNC,QAAS,SAExBE,mBAAoB,SAACH,GAAD,mBAAC,eACdA,GADa,IACLI,aAAc,MAAOvO,UAAW,SAE/CwO,kBAAmB,SAACL,GAAD,mBAAC,eACbA,GADY,IACJC,QAAS,SAExBK,eAAgB,SAACN,GAAD,mBAAC,eACVA,GADS,IACDC,QAAS,SAExBM,QAAS,SAACP,GAAD,mBAAC,eAEHA,GAFE,IAEMQ,UAAW,GAAIrC,OAAQ,MAEtCsC,OAAQ,SAACT,GAAD,mBAAC,eACFA,GADC,IAEJU,aAAc,kBACdC,WAAY,EAAGC,cAAe,KAElCC,iBAAkB,SAACb,GAAD,mBAAC,eACZA,GADW,IAEdC,QAAS,MAoCJa,GAAiB,SAAAC,GAAU,IAAD,EACL9Q,oBAAS,GADJ,mBAC5BmM,EAD4B,KACnBjG,EADmB,KA0CnC,OACI,cAAC,KAAD,CACIjI,KAAK,aACL8S,WAAY5E,EACZ6E,YAnCQ,SAACC,EAAQC,EAAT,GAAsC,IAAZC,EAAW,EAAXA,KAClCvU,EAAQ,CACRwM,SAAU,GACVD,YAAagI,EACbjI,QAAS+H,GAEb,OAdiB,SAACrU,GAClB,IAAMwU,EAAMzU,8DAAwDC,EAAMwM,SAAW,gBAAkBxM,EAAMuM,YAAc,YAAcvM,EAAMsM,QAC/I,OAAOuG,KAAO7H,MAAK,WAEf,OADiByJ,MAAMD,GAAKxJ,MAAK,SAAAiB,GAAG,OAAIA,EAAIyI,UAAQ1J,MAAK,SAAArK,GAAE,OAAIA,QAW5DgU,CAAa3U,GAAOgL,MAAK,SAAAwH,GAE5B,GADAlJ,GAAW,GACa,OAApBkJ,EAAOrH,SAAmB,CAC1B,IAAMyJ,EAAc5U,EAAMuM,YAAcvM,EAAMwM,SAC9C,MAAO,CACHqI,QAASrC,EAAOjQ,KAChBuS,QAASF,EAAcpC,EAAOpH,WAC9B2J,WAAY,CACRR,KAAMA,EAAO,IAKrB,MAAO,CACHM,QAAS,CAAC,CAAE9G,MAAO,EAAGiH,MAAO,cAC7BF,SAAS,EACTC,WAAY,CACRR,KAAMA,EAAO,QAazBU,gBAAc,EACdlH,MAAOmG,EAAMgB,OAAS,GACtBlG,SAAUkF,EAAMlF,SAChBhB,YAAauB,EAAU,aAAe,aACtC4D,OAAQF,GACR8B,WAAY,CACRR,KAAM,MAOTY,GAAiB,SAAAjB,GAAU,IAAD,EACL9Q,oBAAS,GADJ,mBAC5BmM,EAD4B,KACnBjG,EADmB,KA0CnC,OACI,cAAC,KAAD,CACIjI,KAAK,cACL8S,WAAY5E,EACZ6E,YAnCQ,SAACC,EAAQC,EAAT,GAAsC,IAAZC,EAAW,EAAXA,KAClCvU,EAAQ,CACRwM,SAAU,GACVD,YAAagI,EACbjI,QAAS+H,GAEb,OAdiB,SAACrU,GAClB,IAAMwU,EAAMzU,+DAAyDC,EAAMwM,SAAW,gBAAkBxM,EAAMuM,YAAc,YAAcvM,EAAMsM,QAChJ,OAAOuG,KAAO7H,MAAK,WAEf,OADiByJ,MAAMD,GAAKxJ,MAAK,SAAAiB,GAAG,OAAIA,EAAIyI,UAAQ1J,MAAK,SAAArK,GAAE,OAAIA,QAW5DgU,CAAa3U,GAAOgL,MAAK,SAAAwH,GAE5B,GADAlJ,GAAW,GACa,OAApBkJ,EAAOrH,SAAmB,CAC1B,IAAMyJ,EAAc5U,EAAMuM,YAAcvM,EAAMwM,SAC9C,MAAO,CACHqI,QAASrC,EAAOjQ,KAChBuS,QAASF,EAAcpC,EAAOpH,WAC9B2J,WAAY,CACRR,KAAMA,EAAO,IAKrB,MAAO,CACHM,QAAS,CAAC,CAAE9G,MAAO,EAAGiH,MAAO,cAC7BF,SAAS,EACTC,WAAY,CACRR,KAAMA,EAAO,QAazBU,gBAAc,EACdlH,MAAOmG,EAAMgB,OAAS,GACtBlG,SAAUkF,EAAMlF,SAChBhB,YAAauB,EAAU,aAAe,aACtC4D,OAAQF,GACR8B,WAAY,CACRR,KAAM,MC0SPxR,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EAhdA,SAACL,GAEZ,IAAMkO,EAAW,CAAEwE,UAAW,GAAIC,WAAY,GAAItE,IAAK,GAAItP,KAAM,GAAI+S,IAAK,GAAIc,gBAAiB,GAAItE,UAAW,IACxGC,EAAgB,CAAEF,IAAK,GAAIuE,gBAAiB,GAAI7T,KAAM,IAHvC,EAIW2B,mBAASwN,GAJpB,mBAIdzI,EAJc,KAIJC,EAJI,OAKehF,mBAAS,IALxB,mBAKdmS,EALc,KAKFC,EALE,OAMapS,mBAAS,GANtB,mBAMdmF,EANc,KAMHC,EANG,OAOWpF,mBAAS,GAPpB,mBAOdqF,EAPc,KAOJC,EAPI,OAQWtF,mBAAS,IARpB,mBAQduF,EARc,KAQJC,EARI,OASaxF,mBAAS,OATtB,mBASdyF,EATc,KASHC,EATG,OAUe1F,mBAAS,mBAVxB,mBAUd2F,EAVc,KAUFC,EAVE,OAWiB5F,mBAAS,IAX1B,mBAWd6F,EAXc,KAWDC,EAXC,OAYS9F,oBAAS,GAZlB,mBAYd+F,EAZc,KAYLC,EAZK,OAaGhG,oBAAS,GAbZ,mBAadoE,EAbc,KAaR6B,EAbQ,OAcWjG,oBAAS,GAdpB,oBAcdyC,GAdc,MAcHyD,GAdG,SAeelG,oBAAS,GAfxB,qBAedmG,GAfc,MAeFC,GAfE,SAgBOpG,mBAAS6N,GAhBhB,qBAgBdxH,GAhBc,MAgBNC,GAhBM,SAiBetG,mBAAS,MAjBxB,qBAiBduG,GAjBc,MAiBFC,GAjBE,SAkByBxG,oBAAS,GAlBlC,qBAkBdyG,GAlBc,MAkBGC,GAlBH,MAoBfpD,GAAc,WAChB2C,GAAQ,GACRG,IAAc,IAeZO,GAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAgB,qBAAKvF,MAAO,CAAEqL,UAAW,UAAzB,UAAwC3H,EAAW,GAAKE,EAAY2B,EAAQ,EAAI,OACtGD,IAAK,GAET,CACIL,IAAK,kBACLtC,KAAM,UACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,MACLtC,KAAM,QACNwC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,eAACgB,GAAA,EAAD,WACI,cAACA,GAAA,EAAOC,MAAR,CACIpH,MAAO,IACPqH,OAAQ,IACRC,IAAqB,IAAhBhH,EAAO9I,KAAa8I,EAAOiH,aAAe,mBAAGiE,KAAMlL,EAAOiK,IAAKvQ,OAAO,SAA5B,SAAsCsG,EAAOiK,MAC5F/C,IAAKlH,EAAOwG,MAEhB,cAACK,GAAA,EAAOO,QAAR,UACqB,IAAhBpH,EAAO9I,KAAa8I,EAAOiH,aAAe,mBAAGiE,KAAMlL,EAAOiK,IAAKvQ,OAAO,SAA5B,SAAsCsG,EAAOiK,eAMhH,CACIxK,IAAK,SACLtC,KAAM,SACNuC,MAAO,IACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,eAAC,WAAD,WACI,yBACI9L,UAAU,yBACVI,QAAS,SAAA8F,GAAC,OAAIC,GAAWF,IACzBxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,eAJjB,WAMA,yBACIA,UAAU,wBACVI,QAAS,kBAAMiG,GAAaJ,IAFhC,UAGI,mBAAGjG,UAAU,gBAHjB,qBA2BlBmG,GAAa,SAACF,GAChBnC,EAAY,2BAAKmC,GAAN,IAAcyG,UAAWzG,EAAOwG,OAC3C1H,GAAQ,GACRO,GAAc,aACdF,GAAUuH,IAGRtG,GAAe,SAACJ,GAClBnC,EAAYmC,GACZf,IAAc,GACdI,GAAc,gBAsBZgB,GAAU,SAACC,GACbzB,GAAW,GACXsM,GAAc/E,SAAS9F,GAClBG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACdqK,EAAcvK,EAAS1I,KAAKA,MAC5BiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACdqK,EAAc,IACdhN,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,OAIlBgB,GAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACXP,EAAW,GACXQ,EAAc,IAClBrC,IAAW,GACXI,GAAUuH,IACNY,EAAQ,IAAIC,UACVC,OAAO,YAAatG,EAAS2J,WACnCvD,EAAME,OAAO,OAAQtG,EAAShK,MAC9BoQ,EAAME,OAAO,kBAAmBtG,EAAS6J,iBACvB,IAAlB7J,EAAShK,KAAaoQ,EAAME,OAAO,aAActG,EAAS4J,YAAcxD,EAAME,OAAO,aAAc,IACjF,IAAlBtG,EAAShK,KAAaoQ,EAAME,OAAO,MAAOtG,EAAS+I,KAAO3C,EAAME,OAAO,MAAO,IAC3D,aAAfpI,KACAkI,EAAME,OAAO,MAAOtG,EAASsF,KAC7Bc,EAAME,OAAO,cAAerP,EAAKM,KAAK5B,aACtCuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,gHAEvC,cAAfnC,KACAkI,EAAME,OAAO,MAAOtG,EAASsF,KAC7Bc,EAAME,OAAO,cAAerP,EAAKM,KAAK5B,aACtCuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,mIAEvC,gBAAfnC,KACAkI,EAAQ,GACRA,EAAQ,CACJuD,UAAWjN,EAASiN,UACpBhU,YAAasB,EAAKM,KAAK5B,aAE3BuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,4GA3B3C,UA8BT4J,GAAc/E,SAASkB,EAAOlI,IAAYqB,MAAK,SAACiB,GAClDd,EAAWc,EAAI1J,KAAK4I,SACpB7B,IAAW,GACM,OAAb6B,GACAzB,GAAU,CAAE4L,gBAAiB,yBAEhB,OAAbnK,IACA9B,GAAQ,GACRG,IAAc,GACdE,GAAUiC,GACV7B,IAAmB,OAIxBuB,OAAM,SAACc,GACN7C,IAAW,GACXI,GAAUyC,MA9CC,4CAAH,sDAkDhBjI,qBAAU,WAQN0G,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,MAIf,CAACF,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAAM+I,GAAe,SAAAlO,GAAU,IAAD,EACFA,EAAMG,OAAtB5C,EADkB,EAClBA,KACJ4Q,EAFsB,EACZlE,MAGd,GADArE,GAAUuH,GACgB,QAAtBnN,EAAMG,OAAO5C,KAAgB,CAG7B,GAFA4Q,EAAMnO,EAAMG,OAAOiO,MAAM,GACzB9J,EAAY,2BAAKD,GAAN,IAAgB6I,UAAW,GAAID,IAAK,OAC1CkB,EAAK,OACV,IAAKA,EAAI5Q,KAAK8Q,MAAM,qBAGhB,OAFAzI,GAAU,CAAEqH,IAAK,oDACjBzH,IAAW,GAGf,GAAI2I,EAAI5L,KAAO,QAGX,OAFAqD,GAAU,CAAEqH,IAAK,4BACjBzH,IAAW,GAGf,IAAI8I,EAAS,IAAIC,WACjBD,EAAOE,cAAcL,GACrBG,EAAOG,UAAY,WACfnK,EAAY,2BAAKD,GAAN,IAAgB6I,UAAWoB,EAAOI,OAAQzB,IAAKkB,MAGlE7J,EAAY,2BACLD,GADI,mBAEN9G,EAAO4Q,MAQV0D,GAAyB,SAAAC,GAC3B,IAAMC,EAAUD,EAAI3R,OAAO6R,SAASC,MAASH,EAAI3R,OAAO8J,MAAQ5F,EAASmN,gBACzElN,EAAY,2BAAKD,GAAN,IAAgBmN,gBAAiBO,MA0B1CxI,GAAU,eAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,UACZ,eAACD,EAAA,EAAK0I,IAAN,WACI,cAAC1I,EAAA,EAAKE,MAAN,CAAYC,UAAU,YAAtB,SACI,cAACH,EAAA,EAAKI,QAAN,CAAcjM,KAAK,SAASgR,aAActK,EAASiN,cAEvD,eAAC9H,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,OAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,mBAA8BnE,GAAOhI,KAChC,sBAAM6C,UAAU,4CAAhB,SAA6DmF,GAAOhI,OAAgB,GACzF,eAAC6L,EAAA,EAAKI,QAAN,CACIrM,KAAK,OACLgF,KAAK,KACLF,GAAG,SACH4H,MAAO5F,EAAS1G,KAChBuN,SAAUgD,GALd,UAMI,wBAAQjE,MAAM,GAAd,sBACA,wBAAQA,MAAM,IAAd,4BACA,wBAAQA,MAAM,IAAd,2BAGR,eAACT,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,kBAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,8BAAyCnE,GAAO6L,gBAC3C,sBAAMhR,UAAU,4CAAhB,SAA6DmF,GAAO6L,kBAA2B,GACpG,cAAChI,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,kBACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,GACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,GACV3H,YAAY,0BAGL,IAAlB7F,EAAS1G,MAAgC,MAAlB0G,EAAS1G,KAAgB,eAAC6L,EAAA,EAAKE,MAAN,CAAYC,UAAU,MAAtB,UAC7C,cAACH,EAAA,EAAKM,MAAN,kBACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACL5E,KAAK,OACLJ,KAAK,MACL0M,MAAO5F,EAASqM,IAChBxF,SAAUgD,GACVhE,YAAY,WACH,GAEE,IAAlB7F,EAAS1G,MAAgC,MAAlB0G,EAAS1G,KAAgB,eAAC6L,EAAA,EAAKE,MAAN,CAAYC,UAAU,aAAtB,UAC7C,cAACH,EAAA,EAAKM,MAAN,sBACA,cAAC,GAAD,CACIsH,MAAO/M,EAASkN,WAAc,CAAEtH,MAAO5F,EAASkN,WAAYL,MAAO7M,EAASqJ,cAAkB,GAC9FxC,SA/EW,SAACoH,GACpBhO,EAAY,2BAAKD,GAAN,IAAgBkN,WAAYe,EAAKrI,MAAOyD,aAAc4E,EAAKpB,eA+ErD,GAEjB,eAAC1H,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACH,EAAA,EAAKM,MAAN,oBAA+BnE,GAAOsH,IACjC,sBAAMzM,UAAU,4CAAhB,SAA6DmF,GAAOsH,MAAe,KACxF,cAACzD,EAAA,EAAKoF,KAAN,CAAWrM,KAAK,KAAKhF,KAAK,MAAMsR,cAAexK,EAAS4I,IAAK/B,SAAUgD,QAE1E7J,EAAS6I,UAAa,cAAC1D,EAAA,EAAKE,MAAN,CAAYC,UAAU,eAAtB,SACnB,cAAC2D,GAAA,EAAD,UACI,cAACA,GAAA,EAAOC,MAAR,CACIpH,MAAO,IACPqH,OAAQ,IACRC,IAAI,GACJE,IAAKtJ,EAAS6I,gBAGT,MAGf/C,GAAgB,qBAAKpC,wBAAyB,CAAEC,OAAQ,uGAE9D,OACI,gCACI,sBAAKxH,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,4BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,cAAf,SACI,eAACiC,EAAA,EAAD,CAAQC,QAAQ,UAAU9B,QApGvC,WACnBkF,GAAc,YACdxB,EAAYwI,GACZtH,IAAW,GACXD,GAAQ,GACRK,GAAUuH,IA+FsB,UAAmD,mBAAG3M,UAAU,eAAhE,YAUJ,qBAAKA,UAAU,YAAf,SAEKiR,EAAc,cAAC,IAAD,CACXrH,OA1SzB,CACXC,WAAY,YACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CA+RkBC,QAASyG,EACTxL,QAASA,GACTgF,SAAS,EACTC,SAjRb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MAmQyBsF,aAAc/G,EACdgH,QAASpG,IACN,wDAY/B,cAAC,EAAD,CACI3B,KAAMA,EAENZ,KAAMyG,GACN3G,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,kBACNG,YAAY,cACZC,YAAY,UACZlB,UAAWA,GACXgB,WA9JK,WACjB,IAAI+L,EAAWzK,EAAS4I,IAAI1K,KACxB8F,EAAQ,KACU,OAAlBhE,EAAS1G,MAAmC,KAAlB0G,EAAS1G,OACnC0K,EAAK,2BAAQA,GAAR,IAAe1K,KAAM,wBAE1B0G,EAAS4I,KACL6B,EAAW,UACXzG,EAAK,2BAAQA,GAAR,IAAe4E,IAAK,wBAGjCrH,GAAUyC,GACLA,GAAOX,GAAWrD,MAqJd0B,GAAmB,cAAC,GAAD,CAChBrC,KAAMqC,GACNlD,MAAO8C,GACPhI,KAAK,UACLiF,YA5ZE,WACdoD,IAAmB,GAQnBc,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,OAsZe,GAErB,cAAC,EAAD,CACInB,KAAM+B,GACNlD,KAAK,KACLO,KAAMqH,GACNvH,YAAaA,GACb8I,SAAS,SACTC,UAAU,EACV9I,MAAM,cACNG,YAAY,cACZC,YAAY,SACZlB,UAAWA,GACXgB,WAAY2E,QAGpB,8B,UCzdR1L,GAAUC,2CAsBC,O,wFAnBX,SAASC,EAAOC,GAEZ,OAAQA,GACJ,IAAK,WACD,OAAOC,IAAMC,KAAKL,GAAU,WAAYE,GAC5C,IAAK,WACD,OAAOE,IAAMC,KAAKL,GAAU,kBAAmBE,GACnD,IAAK,cACD,OAAOE,IAAMC,KAAKL,GAAU,kBAAmBE,GACnD,IAAK,cACD,OAAOE,IAAMC,KAAKL,GAAU,eAAgBE,GAChD,IAAK,cAED,OADAF,IAAW,sBAAwBE,EAAMwM,SAAW,gBAAkBxM,EAAMuM,YAAc,YAAcvM,EAAMsM,QACvGpM,IAAMmW,IAAIvW,GAAUE,GAC/B,QACI,OAAOE,IAAMC,KAAKL,GAAU,WAAYE,Q,eChB3CsW,GAAc,SAAApC,GAEvB,IAAMnK,EAAU,CACZ,CACIC,IAAK,KACLtC,KAAM,MACNuC,MAAO,GACPC,MAAO,SACPC,UAAU,EACVC,KAAM,SAACC,EAAKC,GAAN,OAAgB,qBAAKvF,MAAO,CAAEqL,UAAW,UAAzB,UACf8D,EAAMzL,SAAW,GAAKyL,EAAMvL,SAAY2B,EAAQ,EAAI,OAE3DD,IAAK,GAET,CACIL,IAAK,eACLtC,KAAM,UACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,gBACLtC,KAAM,WACNwC,MAAO,SACPC,UAAU,GAEd,CACIH,IAAK,QACLtC,KAAM,QACNwC,MAAO,SACPC,UAAU,EACVF,MAAO,IACPG,KAAM,SAAAG,GACF,OAAQ,eAAC,WAAD,WACJ,cAAC,KAAD,CACIwD,MAAOxD,EAAOgM,MACdC,mBAAmB,EACnBC,aAAc,EACdC,YAAa,SAEjB,uBAAM,8CAPF,MAO0BnM,EAAOoM,cAAgB,EAAKpM,EAAOoM,cAAgB,IAAO,OAIpG,CACI3M,IAAK,MACLtC,KAAM,OACNwC,MAAO,SACPD,MAAO,GACPE,UAAU,EACVC,KAAM,SAAAG,GACF,OACI,cAAC,KAAD,CACIwD,MAAOxD,EAAOqM,IACdJ,mBAAmB,EACnBC,aAAc,EACdC,YAAa,WAK7B,CACI1M,IAAK,SACLtC,KAAM,SACNuC,MAAO,IACPE,UAAU,EACVD,MAAO,SACPE,KAAM,SAAAG,GACF,OACI,qBAAKxF,MAAO,CAAEqL,UAAW,UAAzB,SACI,eAAC,WAAD,WACI,yBAAQpK,UAAQ,EACZ1B,UAAU,sBACVI,QAAS,kBAAMwP,EAAMvJ,aAAaJ,IAClCxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,eAJjB,YAMA,yBACIA,UAAU,yBACVI,QAAS,kBAAMwP,EAAMzJ,WAAWF,IAChCxF,MAAO,CAAE2F,YAAa,OAH1B,UAII,mBAAGpG,UAAU,eAJjB,WAMA,yBACIA,UAAU,wBACVI,QAAS,kBAAMwP,EAAMvJ,aAAaJ,IAFtC,UAGI,mBAAGjG,UAAU,gBAHjB,qBA2BxB,OACI,cAAC,IAAD,CACI4J,OAjBO,CACXC,WAAY,aACZC,UAAW,GACXC,YAAa,CAAC,GAAI,GAAI,IACtBC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,UACZC,OAAQ,CACJC,OAAO,EACPC,OAAO,GAEXC,SAAU,CACNC,aAAc,0CAMdC,QAASoF,EAAMpF,QACf/E,QAASA,EACTgF,SAAS,EACTC,SAAUkF,EAAMlF,SAChBM,aAAc4E,EAAM5E,aACpBC,QAAS2E,EAAM/K,WCyFZpG,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EAzMC,SAACL,GAAU,IAAD,EACgBU,mBAAS,IADzB,mBACfyT,EADe,KACFC,EADE,OAEY1T,mBAAS,GAFrB,mBAEfmF,EAFe,KAEJC,EAFI,OAGUpF,mBAAS,CAAEiS,WAAY,KAHjC,mBAGflN,EAHe,KAGLC,EAHK,OAIUhF,mBAAS,GAJnB,mBAIfqF,EAJe,KAILC,EAJK,OAKUtF,mBAAS,IALnB,mBAKfuF,EALe,KAKLC,EALK,OAMYxF,mBAAS,OANrB,mBAMfyF,EANe,KAMJC,EANI,OAOc1F,mBAAS,gBAPvB,mBAOf2F,EAPe,KAOHC,EAPG,OAQgB5F,mBAAS,IARzB,mBAQf6F,EARe,KAQFC,EARE,OASU9F,oBAAS,GATnB,mBASfyC,EATe,KASJyD,EATI,OAUclG,oBAAS,GAVvB,mBAUfmG,EAVe,KAUHC,EAVG,OAWQpG,oBAAS,GAXjB,mBAWf+F,EAXe,KAWNC,EAXM,QAYwBhG,oBAAS,GAZjC,qBAYfyG,GAZe,MAYEC,GAZF,SAaM1G,mBAAS,MAbf,qBAafqG,GAbe,MAaPC,GAbO,MAchBhG,GAAUC,cACVoT,GAAS,IAAIC,KAiBbpM,GAAO,uCAAG,WAAOC,GAAP,SAAAa,EAAA,6DACZqL,GAAOE,OAAO,iBACd7N,GAAW,GAFC,SAGN8N,GAAevG,SAAS9F,GACzBG,MAAK,SAAAC,GACFC,YAAW,WACwB,OAA3BD,EAAS1I,KAAK4I,WACd2L,EAAe7L,EAAS1I,KAAKA,MAC7BiG,EAAayC,EAAS1I,KAAK6I,aAEA,OAA3BH,EAAS1I,KAAK4I,WACd2L,EAAe,IACftO,EAAa,IAEjBY,GAAW,KACZ,QAENiC,OAAM,SAAAb,GACHc,QAAQC,IAAIf,MAlBR,2CAAH,sDAsBPgB,GAAU,uCAAG,gCAAAE,EAAA,6DACXP,EAAW,GACG,IAClB7B,GAAW,GAEPuI,EAAQ,CACRwD,WAAYlN,EAASkN,WACrBjU,YAAasB,EAAKM,KAAK5B,aAE3BuK,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,2GATvC,SAWToL,GAAevG,SAASkB,EAAO,eAAe7G,MAAK,SAACiB,GACtDd,EAAWc,EAAI1J,KAAK4I,SACpB7B,GAAW,GACM,OAAb6B,IACAzB,GAAUiC,GACVnC,GAAc,GACdM,IAAmB,OAExBuB,OAAM,SAACc,GACN7C,GAAW,GAEXgC,QAAQC,IAAIY,MAtBD,2CAAH,qDA6ChBjI,qBAAU,WASN0G,GARc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,EACVlH,KAAM,MAIX,CAACgH,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAAMkO,GAAU,uCAAG,WAAO5M,GAAP,SAAAmB,EAAA,sEACTqL,GAAOK,IAAI,gBAAiB7M,EAAO8K,YAD1B,OAEf3R,GAAQmB,KAAK,iBAFE,2CAAH,sDASVoJ,GAAgB,qBAAKpC,wBAAyB,CAAEC,OAAQ,uGAE9D,OACI,gCACI,sBAAKxH,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,8BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,cAAf,SACI,cAAC,IAAD,CAAMC,GAAG,eAAT,SAAwB,eAACgC,EAAA,EAAD,CAAQC,QAAQ,UAAhB,UAA0B,mBAAGlC,UAAU,eAAvC,cAG5B,qBAAKA,UAAU,YAAf,SACKuS,EAAe,cAAC,GAAD,CACZ/H,QAAS+H,EACT7H,SAxEb,SAACzM,GACxB0M,OAAOC,KAAK3M,GAAM4M,KAAI,SAACnF,GAcnB,MAbY,eAARA,GAAwBzH,EAAKyH,KAC7BlB,EAAavG,EAAKyH,GAAKoF,OACvBpG,EAAczG,EAAKyH,GAAKqF,SAEhB,gBAARrF,GACAtB,EAAYnG,EAAKyH,IAET,cAARA,GACApB,EAAYrG,EAAKyH,IAET,iBAARA,GACAd,EAAe3G,EAAKyH,KAEjB,MA0DyBsF,aAAc/G,EACdE,SAAUA,EACVE,SAAUA,EACV4G,QAASpG,EACTsB,WAAY0M,GACZxM,aAzCnB,SAACJ,GAClBnC,EAAYmC,GACZf,GAAc,MAwCyB,wDAU/B,cAAC,EAAD,CACIhC,KAAM+B,EACNlD,KAAK,KACLO,KAAMqH,GACNvH,YA5JI,WAChB8C,GAAc,IA4JFgG,SAAS,SACTC,UAAU,EACV9I,MAAM,iBACNG,YAAY,iBACZC,YAAY,SACZlB,UAAWA,EACXgB,WAAY2E,KAGf3B,GAAmB,cAAC,GAAD,CAChBrC,KAAMqC,GACNlD,MAAO8C,GACPhI,KAAK,UACLiF,YAtKE,WACdoD,IAAmB,GAQnBc,GAPc,CACVwB,WAAYvD,EACZwD,YAAatD,EACbuD,QAASrD,EACTsD,YAAa9D,EACb+D,SAAU7D,OAgKe,MAGzB,8BCQG5F,gBAHS,SAACvB,GAAD,MAAY,CAChCwB,KAAMxB,EAAMkB,KAAKvB,eAEmB,GAAzB4B,EArMC,SAACL,GAEb,IAFsB,EAIUU,mBAFf,CAAEgS,UAAW,GAAIC,WAAY,GAAItE,IAAK,GAAItP,KAAM,GAAI+S,IAAK,GAAIc,gBAAiB,GAAItE,UAAW,KAFxF,mBAIf7I,EAJe,KAILC,EAJK,OAKUhF,mBAAS,GALnB,mBAKfqF,EALe,aAMUrF,mBAAS,KANnB,mBAMfuF,EANe,aAOYvF,mBAAS,QAPrB,mBAOfyF,EAPe,aAQczF,mBAAS,oBARvB,mBAQf2F,EARe,aASgB3F,mBAAS,KATzB,mBASf6F,EATe,aAUM7F,mBAAS,KAVf,6BAsBtBc,qBAAU,cAUP,CAACuE,EAAUE,EAAUE,EAAWE,EAAYE,IAE/C,IAWM0M,EAAyB,SAAAC,GAC3B,IAAMC,EAAUD,EAAI3R,OAAO6R,SAASC,MAASH,EAAI3R,OAAO8J,MAAQ5F,EAASmN,gBACzElN,EAAY,2BAAKD,GAAN,IAAgBmN,gBAAiBO,MAkB1CxI,EAAU,eAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,UACZ,eAACD,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,QAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,oBACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,QACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,aAEpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,WAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,uBACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,WACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,mBAGxB,eAACV,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,cAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,iCACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,cACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,0BAEpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,cAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,0BACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,cACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,sBAIxB,eAACV,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,gBAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,4BACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,gBACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,qBAEpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,aAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,yBACA,cAACN,EAAA,EAAKI,QAAN,CACIrH,KAAK,KACLhF,KAAK,aACLI,KAAK,OAAOyU,QAAQ,SACpBC,QAASR,EACT5H,MAAO5F,EAASmN,gBAChBtG,SAAU2G,EACV3H,YAAY,wBAQ5B,OACI,gCACI,sBAAK1J,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,6BAQhB,yBAASA,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,gBAIf,qBAAKA,UAAU,YAAf,SACK+I,kBAgB7B,8B,uFCxLN0J,I,OAAS,IAAIC,MAGfK,GAAYC,OAASC,SAAS,EAAG,OACjCC,GAAkB,SAAUzT,GAC5B,OAAOA,EAAQ0T,QAAQJ,KAGrBK,G,oDACF,WAAYxD,GAAQ,IAAD,8BACf,cAAMA,IAoEVtJ,QArEmB,sBAqET,8BAAAc,EAAA,6DACAiM,EAAgBZ,GAAOV,IAAI,iBAC3BxL,EAAc,CAAEwK,WAAYsC,GAClC,EAAKC,SAAS,CAAE/R,WAAW,IAHrB,SAIAqR,GAAevG,SAAS9F,EAAa,eACtCG,MAAK,SAAAC,GACF,GAA+B,OAA3BA,EAAS1I,KAAK4I,SAAmB,CACjC,IAAM0M,EAAQ5M,EAAS1I,KAAKA,KAC5B0M,OAAOC,KAAK,EAAKpO,cAAcqO,KAAI,SAACnF,GAKhC,OAJA,EAAK4N,SAAL,gBAAiB5N,EAAM6N,EAAM7N,KAC7B,EAAK4N,SAAS,CAAE5G,UAAW6G,EAAM9G,MACjC,EAAK6G,SAAS,CAAE7G,IAAK,KACrB,EAAK6G,SAAS,CAAE/R,WAAW,IACpB,KAGgB,OAA3BoF,EAAS1I,KAAK4I,WACdG,QAAQC,IAAIN,EAAS1I,KAAKA,MAC1B,EAAKqV,SAAS,CAAE/R,WAAW,QAGlCwF,OAAM,SAAAb,GACHc,QAAQC,IAAIf,GACZ,EAAKoN,SAAS,CAAE/R,WAAW,OAvB7B,2CAnEN,EAAK/E,aAAe,CAChBuU,WAAY,GACZ7D,aAAc,GACdX,YAAa,GACbC,cAAe,GACfyF,MAAO,GACPuB,UAAW,GACXC,MAAO,GACPC,QAAS,GACTC,cAAe,GACfC,UAAW,GACXnH,IAAK,GACLC,UAAW,GACX2F,cAAe,GACfC,IAAK,GACLuB,cAAe,GACfC,WAAY,GACZC,SAAU,GACVjX,YAAa,IAEjB,EAAKI,MAAQ,CACT8W,QAASd,GACTe,QAASf,GACT3R,WAAW,EACXgE,iBAAiB,EACjBJ,OAAQ,EAAK3I,aACb0X,WAAW,EACXC,QAAQ,EACRpD,WAAY,GACZ7D,aAAc,GACdX,YAAa,GACbC,cAAe,GACfyF,MAAO,GACPuB,UAAW,GACXC,MAAO,GACPC,QAAS,GACTC,cAAe,GACfC,UAAW,GACXnH,IAAK,GACLC,UAAW0H,GACX/B,cAAe,GACfC,IAAK,GACLuB,cAAe,GACfC,WAAY,GACZC,SAAU,GACVjX,YAAa,IAGjB,EAAKsO,aAAe,EAAKA,aAAaiJ,KAAlB,iBACpB,EAAK3G,aAAe,EAAKA,aAAa2G,KAAlB,iBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,iBACtB,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,iBAC7B,EAAKG,oBAAsB,EAAKA,oBAAoBH,KAAzB,iBAC3B,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,iBAvDF,E,qDA0DnB,WACI,IAAMK,EAAWC,KAAK/E,MAAMgF,SAASC,SAASC,QAAQ,IAAK,IACrDzB,EAAgBZ,GAAOV,IAAI,iBAChB,iBAAb2C,IAAgCrB,EAAgB,IAAMA,KACtDsB,KAAKrB,SAAS,CAAEa,QAAQ,IACxBQ,KAAKrO,WAGTqO,KAAKrB,SAAS,CAAExW,YAAa6X,KAAK/E,MAAMlR,KAAK5B,gB,mCA8BjD,SAAsBiY,GAClB,IAAMC,EAAe,IAAIzJ,KAAKwJ,GACxBE,EAAQjC,KAAOgC,GAAcE,OAAO,oBAC1CP,KAAKrB,SAAS,CAAEQ,WAAYmB,IACvBN,KAAKzX,MAAMJ,aAAa6X,KAAKrB,SAAS,CAAExW,YAAa6X,KAAK/E,MAAMlR,KAAK5B,gB,iCAE9E,SAAoBiY,GAChB,IAAMC,EAAe,IAAIzJ,KAAKwJ,GACxBE,EAAQjC,KAAOgC,GAAcE,OAAO,oBAC1CP,KAAKrB,SAAS,CAAES,SAAUkB,IACrBN,KAAKzX,MAAMJ,aAAa6X,KAAKrB,SAAS,CAAExW,YAAa6X,KAAK/E,MAAMlR,KAAK5B,gB,0BAE9E,SAAawU,GAAM,IAAD,OACRvU,EAAOuU,EAAI3R,OAAO5C,KACpB0M,EAAQ6H,EAAI3R,OAAO8J,MAGvB,GAFAkL,KAAKrB,SAAS,CAAE/R,WAAW,IAC3BoT,KAAKrB,SAAS,CAAEnO,OAAQ,CAAEsH,IAAK,MACP,QAApB6E,EAAI3R,OAAO5C,KAAgB,CAG3B,GAFA0M,EAAQ6H,EAAI3R,OAAOiO,MAAM,GACzB+G,KAAKrB,SAAS,CAAE7G,IAAK,MAChBhD,EAAO,OACZ,IAAKA,EAAM1M,KAAK8Q,MAAM,qBAGlB,OAFA8G,KAAKrB,SAAS,CAAEnO,OAAQ,CAAEsH,IAAK,4BAC/BkI,KAAKrB,SAAS,CAAE/R,WAAW,IAG/B,GAAIkI,EAAM1H,KAAO,QAGb,OAFA4S,KAAKrB,SAAS,CAAEnO,OAAQ,CAAEsH,IAAK,6BAC/BkI,KAAKrB,SAAS,CAAE/R,WAAW,IAG/B,IAAIuM,EAAS,IAAIC,WACjBD,EAAOE,cAAcvE,GACrBqE,EAAOG,UAAY,WACf,EAAKqF,SAAS,CAAE7G,IAAKhD,EAAOiD,UAAWoB,EAAOI,UAGzC,kBAATnR,IACA0M,EAAQ6H,EAAI3R,OAAOwV,QAAU,EAAI,GAErCR,KAAKrB,SAAL,gBACKvW,EAAO0M,IAGPkL,KAAKzX,MAAMJ,aAAa6X,KAAKrB,SAAS,CAAExW,YAAa6X,KAAK/E,MAAMlR,KAAK5B,gB,4BAE9E,SAAewU,GACXqD,KAAKrB,SAAS,CAAE/G,YAAa+E,EAAI7H,MAAO+C,cAAe8E,EAAIZ,QACtDiE,KAAKzX,MAAMJ,aAAa6X,KAAKrB,SAAS,CAAExW,YAAa6X,KAAK/E,MAAMlR,KAAK5B,gB,0BAG9E,SAAawU,GAAM,IAAD,OACRhP,EAAOgP,EAAI8D,cACjBT,KAAKrB,SAAS,CAAE/R,WAAW,KACE,IAAzBe,EAAK+S,kBAEAV,KAAKzX,MAAMqP,aAAaoI,KAAKrB,SAAL,2BAAmBqB,MAAnB,IAAyBxP,OAAO,2BAAMwP,MAAP,IAAapI,YAAa,gBACtF+E,EAAIhR,iBACJgR,EAAIgE,mBAGHX,KAAKzX,MAAMqP,aAAaoI,KAAKrB,SAAL,2BAAmBqB,MAAnB,IAAyBxP,OAAO,2BAAMwP,MAAP,IAAapI,YAAa,gBAChFoI,KAAKzX,MAAMqP,cACb+E,EAAIhR,iBACJgR,EAAIgE,mBAERX,KAAKrB,SAAS,CAAEY,WAAW,IAC3B,IACI3G,EAAQ,IAAIC,SAChB7C,OAAOC,KAAK+J,KAAKnY,cAAcqO,KAAI,SAACnF,GAEhC,OADA6H,EAAME,OAAO/H,EAAK,EAAKxI,MAAMwI,IACtB,KAEXkN,GAAevG,SAASkB,EAAO,YAAY7G,MAAK,SAACiB,GAE5B,OADNA,EAAI1J,KAAK4I,SAEhB,EAAKyM,SAAS,CAAE/N,iBAAiB,IAEjCyB,QAAQC,IAAIU,EAAI1J,SAErB8I,OAAM,SAACc,GACNyJ,EAAIhR,iBACJgR,EAAIgE,kBACJ,EAAKhC,SAAS,CAAE/R,WAAW,EAAM2S,WAAW,OAEhD5C,EAAIhR,iBACJgR,EAAIgE,oB,uBAGR,WAAa,IAAD,OACRX,KAAKrB,SAAS,CAAE/N,iBAAiB,IACjCoF,OAAOC,KAAK+J,KAAKnY,cAAcqO,KAAI,SAACnF,GAGhC,OAFA,EAAK4N,SAAL,gBAAiB5N,EAAM,KACvB,EAAK4N,SAAS,CAAE/R,WAAW,IACpB,KAEXoT,KAAK/E,MAAMxQ,QAAQmB,KAAK,e,oBAG5B,WAGI,IAAI8G,EAAc,qBAAKE,wBAAyB,CAAEC,OAAQ,4GAK1D,OACI,gCACI,sBAAKxH,UAAU,kBAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oBAAIA,UAAU,MAAd,SAAqB2U,KAAKzX,MAAMiX,OAAU,eAAkB,wBAQ5E,yBAASnU,UAAU,UAAnB,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,qBAAKA,UAAU,iBAAf,SACI,eAACgJ,EAAA,EAAD,CAAMuM,YAAU,EAACrB,UAAWS,KAAKzX,MAAMgX,UAAWxL,SAAUiM,KAAKvJ,aAAjE,UACI,sBAAKpL,UAAU,yBAAf,UACI,eAACgJ,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,eAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,2BACA,cAACN,EAAA,EAAKI,QAAN,CACIK,MAAOkL,KAAKzX,MAAMgQ,aAClBsI,aAAa,MACb9K,SAAUiK,KAAKjH,aACf3L,KAAK,KACLhF,KAAK,eACLI,KAAK,OACLsL,UAAQ,EACRiB,YAAY,iBAChB,cAACV,EAAA,EAAKI,QAAQqM,SAAd,CAAuBtY,KAAK,UAA5B,SACI,sBAAM6C,UAAU,qBAAhB,2CAGR,eAACgJ,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,QAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,2BACA,cAAC,KAAD,CACIvM,KAAK,QACL2N,SAAUiK,KAAKjH,aACf1N,UAAU,+BACVyJ,MAAOkL,KAAKzX,MAAMuW,MAClBvB,mBAAmB,EACnBC,aAAc,EACdwD,UAAU,UACVlN,UAAQ,EACR+M,aAAa,MACb9L,YAAY,iBAChB,cAACV,EAAA,EAAKI,QAAQqM,SAAd,CAAuBtY,KAAK,UAA5B,SACI,sBAAM6C,UAAU,qBAAhB,qCAIR,eAACgJ,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,QAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,oBACA,cAAC,KAAD,CACIoB,SAAUiK,KAAKjH,aACf3Q,KAAK,QACLiD,UAAU,+BACVyJ,MAAOkL,KAAKzX,MAAM+U,MAClBC,mBAAmB,EACnBC,aAAc,EACdwD,UAAU,UACVlN,UAAQ,EACR+M,aAAa,MACb9L,YAAY,UAChB,cAACV,EAAA,EAAKI,QAAQqM,SAAd,CAAuBtY,KAAK,UAA5B,SACI,sBAAM6C,UAAU,qBAAhB,oCAGR,eAACgJ,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,gBAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,iCACA,cAAC,KAAD,CACIoB,SAAUiK,KAAKjH,aACf3Q,KAAK,gBACLiD,UAAU,+BACVyJ,MAAOkL,KAAKzX,MAAMmV,cAClBH,mBAAmB,EACnBC,aAAc,EACdwD,UAAU,UACVC,UAzF/B,SAACC,GAElB,GADkBA,EAAVpM,OACK,IAAK,OAAOoM,GAwFuBL,aAAa,MACb9L,YAAY,0BAKxB,eAACV,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,WAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,uBACA,cAAC,GAAD,CAAgBb,UAAQ,EACpBmI,MAAO+D,KAAKzX,MAAMqP,YAAe,CAAE9C,MAAOkL,KAAKzX,MAAMqP,YAAamE,MAAOiE,KAAKzX,MAAMsP,eAAmB,GACvG9B,SAAUiK,KAAKL,eACfwB,SAAS,aAEZnB,KAAKzX,MAAMiI,OAAOoH,YAAe,sBAAMvM,UAAU,gCAAhB,SAAiD2U,KAAKzX,MAAMiI,OAAOoH,cAAuB,MAEhI,eAACvD,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,UAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,sBACA,cAACN,EAAA,EAAKI,QAAN,CACIK,MAAOkL,KAAKzX,MAAMwW,QAClBhJ,SAAUiK,KAAKjH,aACf3L,KAAK,KACLhF,KAAK,UACLI,KAAK,OACLqY,aAAa,MACb9L,YAAY,eAEpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,aAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,yBACA,cAAC,KAAD,CACIyM,YAAapB,KAAKzX,MAAM4W,WAAc,IAAIvI,KAAKoJ,KAAKzX,MAAM4W,YAAe,GACzErK,MAAOkL,KAAKzX,MAAM4W,WAAc,IAAIvI,KAAKoJ,KAAKzX,MAAM4W,YAAe,GACnEpJ,SAAUiK,KAAKJ,sBACfyB,WAAY,CACRR,aAAc,MACd9L,YAAa,aACb3M,KAAM,aACNiD,UAAW,gCAEfiW,OAAO,KAAKC,YAAavB,KAAKzX,MAAM8W,aAI5C,eAAChL,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,WAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,uBACA,cAAC,KAAD,CACIyM,YAAapB,KAAKzX,MAAM6W,SAAY,IAAIxI,KAAKoJ,KAAKzX,MAAM6W,UAAa,GACrEtK,MAAOkL,KAAKzX,MAAM6W,SAAY,IAAIxI,KAAKoJ,KAAKzX,MAAM6W,UAAa,GAC/DrJ,SAAUiK,KAAKH,oBACfwB,WAAY,CACRtM,YAAa,WAAY8L,aAAc,MACvCzY,KAAM,WAAYiD,UAAW,gCAEjCiW,OAAO,KAAKC,YAAavB,KAAKzX,MAAM8W,aAG5C,eAAChL,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,MAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,uBACA,cAAC,KAAD,CACIoB,SAAUiK,KAAKjH,aACf3Q,KAAK,MACLiD,UAAU,+BACVyJ,MAAOkL,KAAKzX,MAAMoV,IAClBJ,mBAAmB,EACnBC,aAAc,EACdwD,UAAU,UACVH,aAAa,MACb9L,YAAY,mBAKxB,eAACV,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,YAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,wBACA,cAACN,EAAA,EAAKI,QAAN,CACIK,MAAOkL,KAAKzX,MAAM0W,UAClBlJ,SAAUiK,KAAKjH,aACf3L,KAAK,KACLhF,KAAK,YACLI,KAAK,OACLqY,aAAa,MACb9L,YAAY,iBAGpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,gBAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,6BACA,cAAC,KAAD,CACIoB,SAAUiK,KAAKjH,aACf3Q,KAAK,gBACLiD,UAAU,+BACVyJ,MAAOkL,KAAKzX,MAAMyW,cAClBzB,mBAAmB,EACnBC,aAAc,EACdwD,UAAU,UACVH,aAAa,MACb9L,YAAY,sBAGpB,eAACV,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,gBAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,4BACA,cAACoI,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAK+D,GAAI,CAAES,KAAM,EAAGC,OAAQ,GAA5B,SACI,cAACpN,EAAA,EAAKqN,MAAN,CACI3L,SAAUiK,KAAKjH,aACfyH,QAASR,KAAKzX,MAAM2W,cAAgB,EAAK,UAAa,GACtDnD,MAAOiE,KAAKzX,MAAM2W,cAAgB,EAAK,MAAS,KAChD1W,KAAK,SACLJ,KAAK,gBACLuZ,QAAM,cAQ1B,eAACtN,EAAA,EAAK0I,IAAN,WACI,eAAC1I,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAKxI,UAAU,YAA/B,UACI,cAACH,EAAA,EAAKM,MAAN,0BACA,cAACN,EAAA,EAAKI,QAAN,CACI+E,aAAcwG,KAAKzX,MAAMsW,UACzB/K,UAAQ,EACRiC,SAAUiK,KAAKjH,aAAc3L,KAAK,KAClChF,KAAK,YAAY8E,GAAG,WACpB0U,KAAM,EAAG7M,YAAY,gBACzB,cAACV,EAAA,EAAKI,QAAQqM,SAAd,CAAuBtY,KAAK,UAA5B,SACI,sBAAM6C,UAAU,qBAAhB,2BAGR,eAACgJ,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,MAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,oBACCqL,KAAKzX,MAAMiI,OAAOsH,IAAO,sBAAMzM,UAAU,4CAAhB,SAA6D2U,KAAKzX,MAAMiI,OAAOsH,MAAe,GACxH,cAACzD,EAAA,EAAKoF,KAAN,CACIC,cAAesG,KAAKzX,MAAMuP,IAC1B/B,SAAUiK,KAAKjH,aACf3L,KAAK,KACLhF,KAAK,MACL0D,MAAO,CAAE,MAAS,sBACtB,eAACuI,EAAA,EAAKwN,KAAN,CAAWxW,UAAU,aAArB,2CACkC,uBADlC,yBAMJ,eAACgJ,EAAA,EAAKE,MAAN,CAAYrH,GAAI8P,KAAK+D,GAAI,EAAGvM,UAAU,eAAtC,UACI,cAACH,EAAA,EAAKM,MAAN,CAAY7I,MAAO,CAAE,MAAS,oBAA9B,mBACA,cAACqM,GAAA,EAAD,UACI,cAACA,GAAA,EAAOC,MAAR,CACIpH,MAAO,IACPqH,OAAQ,IACRC,IAAI,GACJE,IAAKwH,KAAKzX,MAAMwP,uBAOpC,sBAAK1M,UAAU,cAAf,UACI,eAAC,IAAD,CAAMC,GAAG,YAAT,UACI,cAACgC,EAAA,EAAD,CAAQC,QAAQ,SAAhB,oBAAyC,OAE7C,cAAC,EAAD,CACIX,UAAWoT,KAAKzX,MAAMqE,UACtBpE,KAAK,SACLsE,MAAM,UAHV,oCAiB3BkT,KAAKzX,MAAMqI,gBAAmB,cAAC,GAAD,CAC3BrC,KAAMyR,KAAKzX,MAAMqI,gBACjBlD,MAAOgF,EACPlK,KAAK,UACLiF,YAAauS,KAAKF,YACD,MAIzB,+B,GA/dUgC,aAyeXhY,gBAFS,SAACvB,GAAD,MAAY,CAAEwB,KAAMxB,EAAMkB,KAAKvB,eAEf,GAAzB4B,CAA6B2U,ICja7B3U,eAAQ,IALI,SAACE,GAAD,MAAe,CACtC+X,WAAY,SAAChY,GAAD,OACRC,EAAS,CAAExB,KAAM,YAAaN,YAAa6B,QAGpCD,EAhFF,SAAC,GAAoB,IAAlBiY,EAAiB,EAAjBA,WAAiB,EAEe5X,oBAAS,GAFxB,mBAEtB6X,EAFsB,KAELC,EAFK,OAGsB9X,mBAAS,CACxD+X,wBAAwB,IAJC,mBAGtBC,EAHsB,KAGJC,EAHI,KAa7BnX,qBAAU,WAaN,OAZAgX,GAAiB,GACC,uCAAG,4BAAAxP,EAAA,+EAEUqE,KAFV,OAEP9E,EAFO,OAGb+P,EAAW,eAAK/P,IAChBiQ,GAAiB,GAJJ,gDAMbA,GAAiB,GANJ,yDAAH,oDASlBI,GACAJ,GAAiB,GACV,eACR,CAACF,IAEJ7W,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,cACjD9S,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,mBAEjD9S,SAASoX,eAAe,QAAQjX,WAAa,gBAEzC8W,EAAiBD,wBACjBhX,SAASoX,eAAe,QAAQC,UAAUC,IAAI,oBAC9CtX,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,gBACjD9S,SAASoX,eAAe,QAAQC,UAAUC,IAAI,YAE9CtX,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,UACjD9S,SAASoX,eAAe,QAAQC,UAAUC,IAAI,gBAC9CtX,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,qBAIrD,IAAoByE,EA0BpB,OAzBIT,EACW,eAGP,qCACI,cAAC,EAAD,CAAQ9X,kBA5CM,WACtBkY,EAAuB,CACnBF,wBAAyBC,EAAiBD,4BA4CtC,cAAC,EAAD,IAEA,eAAC,IAAD,CAAQQ,UAVAD,EAUsBE,OAAO1C,SAASC,SAV9BuC,EAAKG,OAAO,EAAGH,EAAKI,YAAY,OAUhD,UACI,cAAC,IAAD,CAAOJ,KAAK,SAASK,UAAWC,KAChC,cAAC,IAAD,CAAON,KAAK,YAAYK,UAAWE,KACnC,cAAC,IAAD,CAAOP,KAAK,YAAYK,UAAWG,KACnC,cAAC,IAAD,CAAOR,KAAK,YAAYK,UAAWI,KACnC,cAAC,IAAD,CAAOT,KAAK,WAAWK,UAAWK,KAClC,cAAC,IAAD,CAAOC,OAAK,EAACX,KAAK,IAAIK,UAAWK,KACjC,cAAC,IAAD,CAAOV,KAAK,WAAWK,UAAWO,KAClC,cAAC,IAAD,CAAOZ,KAAK,WAAWK,UAAWQ,KAClC,cAAC,IAAD,CAAOb,KAAK,eAAeK,UAAWrE,KACtC,cAAC,IAAD,CAAOgE,KAAK,gBAAgBK,UAAWrE,cC/E9C8E,GAAW,uCAAG,WAAOvU,EAAU3G,GAAjB,eAAAoK,EAAA,sEACHiE,GAAW1H,EAAS3G,GADjB,cACjBJ,EADiB,OAEvBF,aAAaiB,QAAQ,WAAYf,GACjCiD,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,cACjD9S,SAASoX,eAAe,QAAQC,UAAUvE,OAAO,mBAJ1B,kBAKhB/V,GALgB,2CAAH,wDCoIT6B,eAAQ,MAJI,SAACE,GAAD,MAAe,CACtCwZ,YAAa,SAACvb,GAAD,OAAW+B,EAAS,CAAExB,KAAM,aAAcP,cAG5C6B,EA5HD,SAAC,GAAqB,IAAnB0Z,EAAkB,EAAlBA,YAAkB,EACSrZ,oBAAS,GADlB,mBACxBsZ,EADwB,KACTC,EADS,OAEHvZ,mBAAS,IAFN,mBAExBqG,EAFwB,KAEhBC,EAFgB,KAGzBhG,EAAUC,cA8BV8I,EAASC,YAAU,CACrBC,cAAe,CACX1E,SAAU,GACVC,KAAM,IAEV2E,iBAAkBC,IAAW,CACzB7E,SAAU6E,MACLC,SAAS,yBACd7E,KAAM4E,MACDC,SAAS,+BAElBC,SAAU,SAACC,GAvCD,IAAChF,EAAU3G,EAAV2G,EAwCDgF,EAAOhF,SAxCI3G,EAwCM2L,EAAO/E,KAvClCyU,GAAe,GACfjT,EAAU,MACVkT,GAAwB3U,EAAU3G,GAC7B0J,MAAK,SAAC9J,GACCA,GAGAyb,GAAe,GACfF,EAAYvb,GACZwC,EAAQmB,KAAK,OAEb6E,EAAU,sCACViT,GAAe,OAGtBtR,OAAM,SAACc,GACJwQ,GAAe,GACfjT,EAAUyC,SA4BtB,OAFAhI,SAASoX,eAAe,QAAQC,UAAY,6BAGxC,qBAAKlX,UAAU,YAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,6BAAf,SACI,sCAEJ,sBAAKA,UAAU,YAAf,UAEKmF,EACG,sBAAKnF,UAAU,8BAAf,UACI,wBAAQI,QAbd,WAAQgF,EAAU,OAagBjI,KAAK,SAAS6C,UAAU,QAAQuY,eAAa,QAAQvW,cAAY,OAA7F,kBACA,uBAAMhC,UAAU,gCAAhB,oBAAwDmF,QAE3D,mBAAGnF,UAAU,gBAAb,2CAEL,uBAAM0I,SAAUP,EAAOiD,aAAvB,UACKjD,EAAOoB,QAAQ5F,UAAYwE,EAAOqB,OAAO7F,SACtC,sBAAM3D,UAAU,4CAAhB,SAA6DmI,EAAOqB,OAAO7F,WAC3E,KACJ,sBAAK3D,UAAU,mBAAf,UACI,mCACI7C,KAAK,OACL6C,UAAU,eACV0J,YAAY,YACRvB,EAAOkB,cAAc,cAC7B,qBAAKrJ,UAAU,qBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAMA,UAAU,uBAM3BmI,EAAOoB,QAAQ3F,MACZuE,EAAOqB,OAAO5F,KACd,sBAAM5D,UAAU,4CAAhB,SAA6DmI,EAAOqB,OAAO5F,OAC3E,KACJ,sBAAK5D,UAAU,mBAAf,UACI,mCACI7C,KAAK,WACL6C,UAAU,eACV0J,YAAY,YACRvB,EAAOkB,cAAc,UAC7B,qBAAKrJ,UAAU,qBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,sBAAMA,UAAU,uBAK5B,qBAAKA,UAAU,0CAAf,SACI,cAAC,EAAD,CACIwY,OAAK,EACLrb,KAAK,SACLoE,UAAW6W,EACX5W,KAAK,OACLC,MAAM,UALV,qCCnFbhD,gBAJS,SAACvB,GAAD,MAAY,CAChCT,WAAYS,EAAMkB,KAAK3B,cAGZgC,EAzBQ,SAAC,GAAuC,IAArC6C,EAAoC,EAApCA,SAAU7E,EAA0B,EAA1BA,WAAegc,EAAW,yCAC1D,OACI,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,gBAAG9D,EAAH,EAAGA,SAAH,OACJnY,EACI6E,EAEA,cAAC,IAAD,CACIrB,GAAI,CACA4U,SAAU,SACV3X,MAAO,CAAEyb,KAAM/D,aCgB5BnW,gBAJS,SAACvB,GAAD,MAAY,CAChCT,WAAYS,EAAMkB,KAAK3B,cAGZgC,EA1BK,SAAC,GAAqC,IAApC6C,EAAmC,EAAnCA,SAAU7E,EAAyB,EAAzBA,WAAegc,EAAU,yCAC/CG,EAAkBnc,GAAcC,aAAaC,QAAQ,SAE3D,OACI,cAAC,IAAD,2BACQ8b,GADR,IAEIC,OAAQ,gBAAE9D,EAAF,EAAEA,SAAF,OACJgE,EACI,cAAC,IAAD,CACI3Y,GAAI,CACA4U,SAAU,IACV3X,MAAO,CAACyb,KAAM/D,MAItBtT,S,OCZL,SAASuX,KACtB,IAAoBzB,EACpB,OACE,cAAC,IAAD,CAAQC,UAFUD,EAEYE,OAAO1C,SAASC,SAFpBuC,EAAKG,OAAO,EAAGH,EAAKI,YAAY,OAE1D,SACE,eAAC,IAAD,WACE,cAAC,GAAD,CAAaO,OAAK,EAACX,KAAK,SAAxB,SACE,cAAC,GAAD,MAEF,cAAC,GAAD,CAAgBA,KAAK,IAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAUuB,KAAK,IAAI1Y,GAAG,WClB9B,IAYe6Y,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtS,MAAK,YAAkD,IAA/CuS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASZ,OACP,cAAC,IAAD,CAAUna,MAAOA,EAAjB,SACE,cAACsa,GAAD,MAGFhZ,SAASoX,eAAe,SAM1B6B,O","file":"static/js/main.448d486a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass MemberService {\r\n    postData(param, action) {  \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/members\", param)\r\n            case \"VIEW_DETAIL\":\r\n                return axios.post(API_URL + \"/profile_member\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/members\", param)\r\n        }\r\n    }\r\n}\r\nexport default new MemberService()","import MemberService from \"../members/MemberService\";\n\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const LOAD_USER = 'LOAD_USER';\nexport const GET_DATA = 'GET_DATA';\nexport const VIEW_DETAIL = 'VIEW_DETAIL';\n\nexport function getMembers(param) {\n    return (dispatch) => {\n        MemberService.postData(param, GET_DATA).then(function (response) {\n            dispatch({\n                type: GET_DATA,\n                payload: {\n                    data: response.data,\n                    errorMessage: false\n                }\n            })\n        }).catch(function (error) {\n            dispatch({\n                type: VIEW_DETAIL,\n                payload: {\n                    data: null,\n                    errorMessage: error\n                }\n            })\n        });\n    }\n}\n\n","import * as ActionTypes from '../actions';\n\nconst CryptoJS = require(\"crypto-js\");\nconst secretKey = process.env.REACT_APP_SECRET_KEY;\n\nlet dt = '';\nlet dt_res = '';\nlet _dt = '';\n\nconst initialState = {\n    isLoggedIn: !!localStorage.getItem('tokenCNI'),\n    token: localStorage.getItem('tokenCNI'),\n    currentUser: {\n        id_operator: null,\n        name: '',\n        password: null\n    }\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.LOGIN_USER:\n            dt = CryptoJS.AES.decrypt(action.token, secretKey);\n            dt_res = dt.toString(CryptoJS.enc.Utf8);\n            _dt = dt_res.split('Þ');\n            localStorage.setItem(\"tokenCNI\", action.token);\n            return {\n                ...state,\n                isLoggedIn: true,\n                token: action.token,\n                currentUser: {\n                    id_operator: _dt[0],\n                    name: _dt[1],\n                    password: null\n                }\n            };\n        case ActionTypes.LOGOUT_USER:\n            localStorage.removeItem('tokenCNI');\n            return {\n                ...state,\n                isLoggedIn: false,\n                token: null,\n                currentUser: {\n                    id_operator: null,\n                    name: '',\n                    password: null\n                }\n            };\n        case ActionTypes.LOAD_USER:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default reducer;\n","import * as ActionTypes from '../actions';\nconst initialState = {\n    getMemberList: null,\n    errorMessage: false\n};\n\nconst members = (state = initialState, action) => {\n    switch (action.type) {\n        case ActionTypes.GET_DATA:\n            return {\n                ...state,\n                getMemberList: action.payload.data,\n                errorMessage: action.payload.errorMessage\n            };\n\n        case ActionTypes.VIEW_DETAIL:\n            return {\n                ...state,\n                currentUser: action.currentUser\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default members;\n","import {createStore, combineReducers} from 'redux';\r\nimport authReducer from './reducers/auth';\r\nimport membersReducer from './reducers/member';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    members:membersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;","import React, { useState, useEffect, useRef } from 'react'\r\nimport { useHistory, Link, NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Header = ({ toggleMenuSidebar, user, onUserLogout }) => {\r\n\r\n    const [dropdownState, updateDropdownState] = useState({\r\n        isDropdownOpen: false\r\n    });\r\n    const dropdownRef = useRef(null);\r\n    const history = useHistory();\r\n    const toggleDropdown = () => {\r\n        updateDropdownState({ isDropdownOpen: !dropdownState.isDropdownOpen });\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            dropdownRef &&\r\n            dropdownRef.current &&\r\n            !dropdownRef.current.contains(event.target)\r\n        ) {\r\n            updateDropdownState({ isDropdownOpen: false });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside, false);\r\n        return () => {\r\n            document.removeEventListener(\r\n                'mousedown',\r\n                handleClickOutside,\r\n                false\r\n            );\r\n        };\r\n    });\r\n\r\n    // let className = 'dropdown-menu dropdown-menu-lg dropdown-menu-right';\r\n\r\n    // if (dropdownState.isDropdownOpen) {\r\n    //     className += ' show';\r\n    // }\r\n\r\n    const logOut = (event) => {\r\n        toggleDropdown();\r\n        event.preventDefault();\r\n        onUserLogout();\r\n        history.push('/login');\r\n    };\r\n    return (\r\n        <nav className=\"main-header navbar navbar-expand navbar-dark navbar-info text-sm border-bottom-0\">\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <NavLink to=\"#\" className=\"nav-link\" data-widget=\"pushmenu\" role=\"button\">\r\n                        <i className=\"fas fa-bars\" />\r\n\r\n                    </NavLink>\r\n\r\n                </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item dropdown\">\r\n                    <NavLink\r\n                        to=\"#\"\r\n                        onClick={toggleDropdown}\r\n                        type=\"button\"\r\n                        className=\"nav-link dropdown-toggle\"\r\n                        data-toggle=\"dropdown\">\r\n                        <i className=\"far fa-user\" /> {user.name ? (user.name) : (\"Logout\")}\r\n                    </NavLink>\r\n\r\n                    <div className=\"dropdown-menu\">\r\n                        <Link\r\n                            to=\"/\"\r\n                            onClick={logOut}\r\n                            className=\"dropdown-item\">\r\n                            <i className=\"fa fa-sign-out-alt\"></i> Logout\r\n                    </Link>\r\n\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onUserLogout: () => dispatch({ type: \"LOGOUT_USER\" })\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nconst MenuSidebar = () => {\r\n    //const location = useLocation();\r\n    //console.log(location.pathname);\r\n    \r\n    return (\r\n        <aside className=\"main-sidebar sidebar-dark-primary elevation-4\">\r\n            {/* Brand Logo */}\r\n            <NavLink to='/' className=\"brand-link text-center\">\r\n                <span className=\"brand-text\"><strong>Admin CNI</strong></span>\r\n            </NavLink>\r\n\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n\r\n                <nav className=\"mt-2\" style={{ marginTop: '1rem!important' }}>\r\n                    <ul className=\"nav nav-pills nav-sidebar flex-column text-sm\" data-widget=\"treeview\" role=\"menu\" data-accordion=\"false\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/members'\r\n                                role=\"button\"\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-copy\" />\r\n                                <p>Data Pelanggan  <i className=\"right fas fa-angle-left\" /></p>\r\n                            </NavLink>\r\n\r\n                            <ul className=\"nav nav-treeview\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/members'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Members</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/konsumen'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Konsumen</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </li>\r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/category'\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fa fa-bookmark\" />\r\n                                <p>Category</p>\r\n                            </NavLink>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/products'\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fa fa-bookmark\" />\r\n                                <p>Products</p>\r\n                            </NavLink>\r\n\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink\r\n                                to='/banners'\r\n                                role=\"button\"\r\n                                className=\"nav-link\">\r\n                                <i className=\"nav-icon fas fa-copy\" />\r\n                                <p>Master Data  <i className=\"right fas fa-angle-left\" /></p>\r\n                            </NavLink>\r\n\r\n                            <ul className=\"nav nav-treeview\">\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/banners'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Banners</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/users'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Users</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink\r\n                                        to='/setting'\r\n                                        className=\"nav-link\">\r\n                                        <i className=\"nav-icon fa fa-folder-open\" />\r\n                                        <p>Setting</p>\r\n                                    </NavLink>\r\n\r\n                                </li>\r\n\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MenuSidebar;\r\n","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass AdminService {\r\n    postDataUsers(param, action) {         \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/admin\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_admin\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/edit_admin\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_admin\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/simpan_admin\", param)\r\n        }\r\n    }\r\n}\r\nexport default new AdminService()","import React from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst icons = {\r\n    facebook: 'fab fa-facebook',\r\n    google: 'fab fa-google',\r\n    googlePlus: 'fab fa-google-plus',\r\n    sign: 'fa fa-unlock-alt',\r\n    edit: 'fa fa-edit',\r\n    delete : 'fa fa-trash'\r\n};\r\n\r\nconst AppButton = ({\r\n    children,\r\n    isLoading,\r\n    icon,\r\n    theme = 'primary',\r\n    disabled,\r\n    ...otherProps\r\n}) => {\r\n    let spinnerTemplate;\r\n    let iconTemplate;\r\n\r\n    if (isLoading) {\r\n        spinnerTemplate = (\r\n            <Spinner\r\n                className=\"ml-2\"\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n            />\r\n        );\r\n    }\r\n\r\n    if (icon && icons[icon]) {\r\n        iconTemplate = <i className={`${icons[icon]} mr-2`} />;\r\n    }\r\n\r\n    return (\r\n        // eslint-disable-next-line react/button-has-type\r\n        <Button\r\n            {...otherProps}\r\n            variant={theme}\r\n            disabled={isLoading || disabled}\r\n        >\r\n            {iconTemplate}\r\n            {children}\r\n            {spinnerTemplate}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport default AppButton;\r\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport Button from '../button/Button'\n\nconst AppModal = ({\n    children,\n    handleClose,\n    title,\n    isLoading,\n    form,\n    formSubmit,\n    titleButton,\n    themeButton,\n    ...otherProps\n}) => {\n    return (\n        // eslint-disable-next-line react/button-has-type\n        <Modal\n            {...otherProps}\n            onHide={handleClose}\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>{title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{form}</Modal.Body>\n            <Modal.Footer>\n                <Button theme=\"info\" onClick={handleClose}>\n                    Close\n          </Button>\n                <Button\n                    isLoading={isLoading}\n                    theme={themeButton}\n                    onClick={formSubmit}\n                >\n                    {titleButton ? titleButton : \"Yes\"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default AppModal;\n","import React from 'react';\r\nimport SweetAlert from \"react-bootstrap-sweetalert\";\r\n\r\n\r\nexport const AppSwalSuccess = ({\r\n    show,\r\n    children,\r\n    handleClose,\r\n    title,\r\n    type,\r\n    textBody,\r\n    formSubmit,\r\n    titleButton,\r\n    themeButton,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <SweetAlert\r\n            {...otherProps}\r\n            show={show}\r\n            type={type}\r\n            title={title}\r\n            text={textBody}\r\n            onConfirm={handleClose}\r\n            onCancel={handleClose}\r\n            onEscapeKey={handleClose}\r\n            onOutsideClick={handleClose}\r\n        />\r\n    );\r\n};\r\n\r\nexport const AppSwalConfirm = ({\r\n    show,\r\n    children,\r\n    handleClose,\r\n    title,\r\n    type,\r\n    textBody,\r\n    formSubmit,\r\n    titleButton,\r\n    themeButton,\r\n    ...otherProps\r\n}) => {\r\n    return (\r\n        <SweetAlert\r\n            {...otherProps}\r\n            show={show}\r\n            type={type}\r\n            title={title !== null ? title : '-'}\r\n            text={textBody}\r\n            onConfirm={handleClose}\r\n            onCancel={handleClose}\r\n            onEscapeKey={handleClose}\r\n            onOutsideClick={handleClose}\r\n        />\r\n    );\r\n};\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport AdminService from './AdminService';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\n\r\n\r\n// export const ToastDemo = ({ content }) => {\r\n//     const { addToast } = useToasts()\r\n//     return (\r\n//         <Button onClick={() => addToast(content, {\r\n//             appearance: 'success',\r\n//             autoDismiss: true,\r\n//         })}>\r\n//             Add Toast\r\n//         </Button>\r\n//     )\r\n// }\r\n\r\nconst UserList = (auth) => {\r\n\r\n    const initAdmin = { id_admin: '', username: '', pass: '', name: '' };\r\n    const [selected, setSelected] = useState(initAdmin);\r\n    const [admin, setAdmin] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => ((pageNumb - 1) * pageSize) + index + 1 + '.',\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"name\",\r\n            text: \"Name\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"username\",\r\n            text: \"Username\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 122,\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button\r\n                            className=\"btn btn-xs btn-success\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-danger btn-xs\"\r\n                            onClick={() => deleteRecord(record)}>\r\n                            <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_admin',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        setSelected(record)\r\n        setShow(true);\r\n        setActionForm(\"EDIT_DATA\")\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n        setActionForm(\"DELETE_DATA\")\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        AdminService.postDataUsers(queryString, \"GET_DATA\")\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setAdmin(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setAdmin([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(null);\r\n        if (actionForm === \"ADD_DATA\") {\r\n            userPost.created_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            userPost.updated_by = auth.user.id_operator;\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            userPost = {};\r\n            userPost = {\r\n                id_admin: selected.id_admin,\r\n                deleted_by: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n        await AdminService.postDataUsers(userPost, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code !== '00') {\r\n                setErrMsg(res.data.err_msg);\r\n                return;\r\n            } else {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const formik = useFormik({\r\n        initialValues: selected,\r\n        enableReinitialize: true,\r\n        validationSchema: Yup.object({\r\n            name: Yup.string()\r\n                .required('Please enter fullname'),\r\n            username: Yup.string()\r\n                .required('Please enter username'),\r\n            pass: Yup.string()\r\n                .required('Please provide a password')\r\n        }),\r\n        onSubmit: (values, { setSubmitting, resetForm }) => {\r\n            handleSave(values);\r\n            resetForm({});\r\n            setSubmitting(false);\r\n        },\r\n        onReset: (values, { setSubmitting, resetForm }) => {\r\n            setSubmitting(false);\r\n        }\r\n    });\r\n\r\n    const discardChanges = () => {\r\n        setActionForm(\"ADD_DATA\");\r\n        setSelected(initAdmin);\r\n        formik.resetForm();\r\n        setShow(true);\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        {/* <div className=\"alert alert-danger alert-sm\">\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\r\n            <span className=\"fw-semi-bold\">Error:</span> Login failed.\r\n        </div> */}\r\n        <Form.Group controlId=\"id_admin\">\r\n            <Form.Control type=\"hidden\" {...formik.getFieldProps('id_admin')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"fullname\">\r\n            <Form.Label>Fullname</Form.Label>\r\n            {formik.touched.name && formik.errors.name ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.name}</span>) : null}\r\n            <Form.Control name=\"name\" size=\"sm\" value=\"test val\" type=\"text\" placeholder=\"Fullname\" {...formik.getFieldProps('name')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            {formik.touched.username && formik.errors.username ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.username}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Username\" {...formik.getFieldProps('username')} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            {formik.touched.pass && formik.errors.pass ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>) : null}\r\n            <Form.Control size=\"sm\" type=\"text\" placeholder=\"Password\" {...formik.getFieldProps('pass')} />\r\n        </Form.Group>\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Dashboard</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {admin ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={admin}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n                    size=\"sm\"\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit User\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={formik.handleSubmit}\r\n                ></AppModal>\r\n\r\n                {showSwalSuccess ? (<AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}\r\n                >\r\n                </AppSwalSuccess>) : ''}\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(UserList);\r\n\r\n","import axios from \"axios\";\r\nimport Moment from \"react-moment\"\r\n\r\nconst API_URL = process.env.REACT_APP_URL_API;\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst secretKey = process.env.REACT_APP_SECRET_KEY;;\r\n\r\nexport const loginAdmin = async (username, pass) => {\r\n    const param = {\r\n        username: username,\r\n        pass: pass\r\n    };\r\n    let token = '';\r\n    await axios.post(API_URL + '/login_admin', param).then(res => {\r\n        const response = res.data;\r\n        if (response.err_code === '00') {\r\n            let data = response.data;\r\n            let id_admin = data.id_admin;\r\n            let name = data.name;\r\n            let tgl = new Date();\r\n            const _token = id_admin + 'Þ' + name + 'Þ' + tgl;\r\n            token = CryptoJS.AES.encrypt(_token, secretKey).toString();\r\n        } else {\r\n            token = '';\r\n        }\r\n    });\r\n    return token;\r\n}\r\n\r\nexport const getProfileAdmin = async () => {\r\n    const token = localStorage.getItem('tokenCNI');\r\n    const dt = CryptoJS.AES.decrypt(token, secretKey);\r\n    const dt_res = dt.toString(CryptoJS.enc.Utf8);\r\n    const _dt = dt_res.split('Þ');\r\n    let dt_user = {\r\n        id_operator: null,\r\n        name: '',\r\n        password: null\r\n    };\r\n    const param = {\r\n        id_admin: _dt[0],\r\n        cms: 1\r\n    };\r\n    await axios.post(API_URL + '/admin_detail', param).then(res => {\r\n        const response = res.data;\r\n        if (response.err_code === '00') {\r\n            let data = response.data;\r\n            dt_user = {\r\n                id_operator: data.id_admin,\r\n                name: data.name,\r\n                password: null\r\n            };\r\n        }\r\n    });\r\n    return dt_user;\r\n}","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport MemberService from './MemberService';\r\n\r\nconst Members = (auth) => {\r\n    const [memberList, setMemberList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"nama\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n\r\n\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        MemberService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setMemberList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setMemberList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"cni_id\",\r\n            text: \"CNI ID\",\r\n            align: \"center\",\r\n            sortable: true,\r\n            cell: record => {\r\n                return (<Fragment> {record.nama} <br />\r\n                    {record.status === 1 ? (<Badge variant=\"success\">Verified</Badge>) : ''}\r\n                </Fragment>)\r\n            }\r\n        },\r\n        {\r\n            key: \"nama\",\r\n            text: \"Fullname\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"email\",\r\n            text: \"Contact\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: record => { return (<Fragment> {record.email} <br /><b>Phone</b> : {record.phone}</Fragment>) }\r\n        },\r\n        {\r\n            key: \"ewallet\",\r\n            text: \"e-Wallet\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 75,\r\n            sortable: false,\r\n            align: \"center\",\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Fragment>\r\n                            <button disabled\r\n                                className=\"btn btn-xs btn-info\"\r\n                                onClick={e => editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-eye\"></i> View\r\n                        </button>\r\n\r\n                        </Fragment>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_member',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize,\r\n            type: 1\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const editRecord = (record) => {\r\n        console.log(record)\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Members</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {memberList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={memberList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, '')(Members);","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport { connect } from 'react-redux';\r\nimport MemberService from './MemberService';\r\n\r\nconst Members = (auth) => {\r\n    const [memberList, setMemberList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"nama\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        MemberService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setMemberList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setMemberList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n\r\n        {\r\n            key: \"nama\",\r\n            text: \"Fullname\",\r\n            align: \"center\",\r\n            sortable: true,\r\n            cell: record => {\r\n                return (<Fragment> {record.nama} <br />\r\n                    {record.status === 1 ? (<span className=\"badge badge-success\">Verified</span>) : ''}\r\n                </Fragment>)\r\n            }\r\n        },\r\n        {\r\n            key: \"email\",\r\n            text: \"Email\",\r\n            align: \"center\",\r\n            sortable: true,\r\n            //cell: record => { return (<Fragment> {record.email} <br /><b>Phone</b> : {record.phone}</Fragment>) }\r\n        },\r\n        {\r\n            key: \"phone\",\r\n            text: \"Phone\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 75,\r\n            sortable: false,\r\n            align: \"center\",\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Fragment>\r\n                            <button disabled\r\n                                className=\"btn btn-xs btn-info\"\r\n                                onClick={e => editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-eye\"></i> View\r\n                        </button>\r\n                        </Fragment>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_member',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize,\r\n            type: 2\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const editRecord = (record) => {\r\n        console.log(record)\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Konsumen</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {memberList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={memberList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, '')(Members);","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass CategoryService {\r\n    postData(param, action) {       \r\n        console.log(param);\r\n        \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/category\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_category\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/simpan_category\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_category\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/category\", param)\r\n        }\r\n    }\r\n}\r\nexport default new CategoryService()","export default __webpack_public_path__ + \"static/media/noPhoto.027652b1.jpg\";","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport CategoryService from './CategoryService';\r\nimport { Button, Form, Figure } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\nimport NoImg from '../assets/noPhoto.jpg'\r\n\r\nconst Category = (auth) => {\r\n    const initData = { id_category: \"\", category_name: \"\", img: \"\", imgUpload: \"\" };\r\n    const errorValidate = { img: '', category_name: '' };\r\n    const [selected, setSelected] = useState(initData);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"category_name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(errorValidate);\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"category_name\",\r\n            text: \"Category\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"img\",\r\n            text: \"Image\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            width: 250,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                width={130}\r\n                                height={100}\r\n                                alt={record.product_name}\r\n                                src={record.img ? (record.img) : (NoImg)}\r\n                            />\r\n\r\n                            <Figure.Caption>\r\n                                {record.product_name}\r\n                            </Figure.Caption>\r\n                        </Figure></div>)\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 122,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <Fragment>\r\n                        <button\r\n                            className=\"btn btn-xs btn-success\"\r\n                            onClick={e => editRecord(record)}\r\n                            style={{ marginRight: '5px' }}>\r\n                            <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-danger btn-xs\"\r\n                            onClick={() => deleteRecord(record)}>\r\n                            <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                    </Fragment>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_category',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        setActionForm(\"EDIT_DATA\")\r\n        setSelected({ ...record, imgUpload: record.img })\r\n        setErrMsg(errorValidate);\r\n        setShow(true);\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setErrMsg(errorValidate);\r\n        setSelected(record)\r\n        setActionForm(\"DELETE_DATA\")\r\n        setdeleteForm(true);\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    const getData = async (queryString) => {\r\n        setLoadTbl(true);\r\n        await CategoryService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setCategoryList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setCategoryList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(errorValidate);\r\n        let _data = new FormData();\r\n        _data.append('id_category', userPost.id_category);\r\n        if (actionForm === \"ADD_DATA\") {\r\n            _data.append('img', userPost.img);\r\n            _data.append('created_by', auth.user.id_operator);\r\n            _data.append('category_name', userPost.category_name);\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            _data.append('img', userPost.img);\r\n            _data.append('updated_by', auth.user.id_operator);\r\n            _data.append('category_name', userPost.category_name);\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            _data = {};\r\n            _data = {\r\n                id_category: selected.id_category,\r\n                deleted_by: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n\r\n        await CategoryService.postData(_data, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code !== '00') {\r\n                setErrMsg(res.data.err_msg);\r\n                return;\r\n            } else {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        var fileSize = selected.img.size;\r\n        var error = null;\r\n        if (selected.category_name === null || selected.category_name === \"\") {\r\n            error = { ...error, category_name: \"Please enter categoty name\" };\r\n        }\r\n        if (selected.img) {\r\n            if (fileSize > 2099200) { // satuan bytes 2099200 => 2MB\r\n                error = { ...error, img: \"File size over 2MB\" };\r\n            }\r\n        }\r\n        setErrMsg(error);\r\n        if (!error) handleSave(selected);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const discardChanges = () => {\r\n        setActionForm(\"ADD_DATA\")\r\n        setSelected(initData);\r\n        setLoading(false);\r\n        setShow(true);\r\n        setErrMsg(errorValidate);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        var val = value;\r\n        setErrMsg(errorValidate);\r\n        if (event.target.name === \"img\") {\r\n            val = event.target.files[0];\r\n            setSelected({ ...selected, imgUpload: \"\", img: \"\" })\r\n            if (!val) return;\r\n            if (!val.name.match(/\\.(jpg|jpeg|png)$/)) {\r\n                setErrMsg({ img: \"Please select valid image(.jpg .jpeg .png)\" });\r\n                setLoading(true);\r\n                return;\r\n            }\r\n            if (val.size > 2099200) {\r\n                setErrMsg({ img: \"File size over 2MB\" });\r\n                setLoading(true);\r\n                return;\r\n            }\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(val);\r\n            reader.onloadend = () => {\r\n                setSelected({ ...selected, imgUpload: reader.result, img: val })\r\n            };\r\n        }\r\n        setSelected({\r\n            ...selected,\r\n            [name]: val\r\n        })\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        <Form.Group controlId=\"id_category\">\r\n            <Form.Control type=\"hidden\" defaultValue={selected.id_category} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category_name\">\r\n            <Form.Label>Category</Form.Label>{errMsg.category_name ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{errMsg.category_name}</span>) : ''}\r\n            <Form.Control size=\"sm\" name=\"category_name\" type=\"text\" value={selected.category_name} onChange={handleChange} placeholder=\"Category\" />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>{errMsg.img ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{errMsg.img}</span>) : ''}\r\n            <Form.File size=\"sm\" name=\"img\" setfieldvalue={selected.img} onChange={handleChange} />\r\n        </Form.Group>\r\n        {selected.imgUpload ? (<Form.Group controlId=\"imagePreview\">\r\n            <Figure>\r\n                <Figure.Image\r\n                    width={130}\r\n                    height={100}\r\n                    alt=\"\"\r\n                    src={selected.imgUpload}\r\n                />\r\n            </Figure>\r\n        </Form.Group>) : ''}\r\n\r\n\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Category</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {categoryList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={categoryList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>No Data...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit Category\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSubmit}\r\n                ></AppModal>\r\n\r\n                {showSwalSuccess ? (<AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}\r\n                >\r\n                </AppSwalSuccess>) : ''}\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, \"\")(Category);","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass CategoryService {\r\n    postData(param, action) {  \r\n            \r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/banner\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_banner\", param)\r\n            case \"EDIT_DATA\":                \r\n                return axios.post(API_URL + \"/simpan_banner\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_banner\", param)\r\n            default:\r\n                return axios.post(API_URL + \"/banner\", param)\r\n        }\r\n    }\r\n}\r\nexport default new CategoryService()","import React, { useState } from \"react\";\r\nimport { AsyncPaginate } from \"react-select-async-paginate\";\r\n\r\nconst wait = () => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(function () {\r\n            resolve();\r\n        }, 200);\r\n    });\r\n};\r\n\r\nconst customStyles = {\r\n    valueContainer: (styles) => ({\r\n        ...styles, padding: '0px 8px'\r\n    }),\r\n    indicatorsContainer: (styles) => ({\r\n        ...styles, padding: '4px'\r\n    }),\r\n    indicatorSeparator: (styles) => ({\r\n        ...styles, marginBottom: '4px', marginTop: '4px'\r\n    }),\r\n    dropdownIndicator: (styles) => ({\r\n        ...styles, padding: '1px'\r\n    }),\r\n    clearIndicator: (styles) => ({\r\n        ...styles, padding: '1px'\r\n    }),\r\n    control: (styles) => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        ...styles, minHeight: 24, height: 30\r\n    }),\r\n    option: (styles) => ({\r\n        ...styles,\r\n        borderBottom: '1px dotted pink',\r\n        paddingTop: 5, paddingBottom: 5\r\n    }),\r\n    noOptionsMessage: (styles) => ({\r\n        ...styles,\r\n        padding: 5,\r\n    }),\r\n}\r\n\r\n// const customStyless = {\r\n//     option: (style) => ({\r\n//         ...style,\r\n//         borderBottom: '1px dotted pink',\r\n//         paddingTop: 5, paddingBottom: 5\r\n//     }),\r\n//     control: (style) => ({\r\n//         // none of react-select's styles are passed to <Control />\r\n//         ...style,\r\n//         height: 32,\r\n//         minHeight: 24\r\n//     }),\r\n//     singleValue: (style) => ({\r\n//         ...style,\r\n//         paddingTop: 0\r\n//     }),\r\n//     dropdownIndicator: (style) => ({\r\n//         ...style,\r\n//         padding: 0,\r\n//         paddingLeft: 4, paddingRight: 4\r\n//     }),\r\n//     indicatorsContainer: (style) => ({\r\n//         ...style,\r\n//         padding: 0,\r\n//         paddingLeft: 4\r\n//     }),\r\n//     indicatorSeparator: (style) => ({\r\n//         ...style,\r\n//         marginTop: 4, marginBottom: 4\r\n//     })\r\n// }\r\n\r\nexport const SelectProducts = props => {\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    const getAsyncData = (param) => {\r\n        const url = process.env.REACT_APP_URL_API + \"/product/?per_page=\" + param.per_page + \"&page_number=\" + param.page_number + \"&keyword=\" + param.keyword\r\n        return wait().then(() => {\r\n            const urlFetch = fetch(url).then(res => res.json()).then(dt => dt);\r\n            return urlFetch;\r\n        });\r\n    };\r\n\r\n    const getData = (search, loadedOptions, { page }) => {\r\n        let param = {\r\n            per_page: 25,\r\n            page_number: page,\r\n            keyword: search\r\n        }\r\n        return getAsyncData(param).then(result => {\r\n            setLoading(false);           \r\n            if (result.err_code === '00') {\r\n                const ttlDataShow = param.page_number * param.per_page;\r\n                return {\r\n                    options: result.data,\r\n                    hasMore: ttlDataShow < result.total_data ? true : false,\r\n                    additional: {\r\n                        page: page + 1\r\n                    }\r\n                }\r\n            } else {\r\n                \r\n                return {\r\n                    options: [{ value: 0, label: \"No Option\" }],\r\n                    hasMore: false,\r\n                    additional: {\r\n                        page: page + 1\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AsyncPaginate\r\n            name=\"id_product\"\r\n            isDisabled={loading}           \r\n            loadOptions={getData} // function that executes HTTP request and returns array of options\r\n            defaultOptions\r\n            value={props.myVal || ''}\r\n            onChange={props.onChange}\r\n            placeholder={loading ? \"Loading...\" : \"Select....\"}\r\n            styles={customStyles}\r\n            additional={{\r\n                page: 1\r\n            }}\r\n        // isDisabled={loading} // uncomment this to disable dropdown until options loaded\r\n        />\r\n    );\r\n}\r\n\r\nexport const SelectCategory = props => {\r\n    const [loading, setLoading] = useState(true);\r\n    \r\n    const getAsyncData = (param) => {\r\n        const url = process.env.REACT_APP_URL_API + \"/category/?per_page=\" + param.per_page + \"&page_number=\" + param.page_number + \"&keyword=\" + param.keyword\r\n        return wait().then(() => {\r\n            const urlFetch = fetch(url).then(res => res.json()).then(dt => dt);\r\n            return urlFetch;\r\n        });\r\n    };\r\n\r\n    const getData = (search, loadedOptions, { page }) => {\r\n        let param = {\r\n            per_page: 25,\r\n            page_number: page,\r\n            keyword: search\r\n        }\r\n        return getAsyncData(param).then(result => {\r\n            setLoading(false);           \r\n            if (result.err_code === '00') {\r\n                const ttlDataShow = param.page_number * param.per_page;\r\n                return {\r\n                    options: result.data,\r\n                    hasMore: ttlDataShow < result.total_data ? true : false,\r\n                    additional: {\r\n                        page: page + 1\r\n                    }\r\n                }\r\n            } else {\r\n                \r\n                return {\r\n                    options: [{ value: 0, label: \"No Option\" }],\r\n                    hasMore: false,\r\n                    additional: {\r\n                        page: page + 1\r\n                    }\r\n                }\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    return (\r\n        <AsyncPaginate\r\n            name=\"id_category\"\r\n            isDisabled={loading}           \r\n            loadOptions={getData} // function that executes HTTP request and returns array of options\r\n            defaultOptions\r\n            value={props.myVal || ''}\r\n            onChange={props.onChange}\r\n            placeholder={loading ? \"Loading...\" : \"Select....\"}\r\n            styles={customStyles}\r\n            additional={{\r\n                page: 1\r\n            }}\r\n        // isDisabled={loading} // uncomment this to disable dropdown until options loaded\r\n        />\r\n    );\r\n}\r\n","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport BannerService from './BannerService';\r\nimport { Button, Form, Figure, Col } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\nimport { SelectProducts } from '../components/modal/MySelect';\r\n\r\n// export const ToastDemo = ({ content }) => {\r\n//     const { addToast } = useToasts()\r\n//     return (\r\n//         <Button onClick={() => addToast(content, {\r\n//             appearance: 'success',\r\n//             autoDismiss: true,\r\n//         })}>\r\n//             Add Toast\r\n//         </Button>\r\n//     )\r\n// }\r\n\r\nconst Banner = (auth) => {\r\n\r\n    const initData = { id_banner: '', id_product: '', img: '', type: '', url: '', priority_number: '', imgUpload: '' };\r\n    const errorValidate = { img: '', priority_number: '', type: '' };\r\n    const [selected, setSelected] = useState(initData);\r\n    const [bannerList, setBannerList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"priority_number\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [show, setShow] = useState(false);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(errorValidate);\r\n    const [actionForm, setActionForm] = useState(null);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>{((pageNumb - 1) * pageSize) + index + 1 + '.'}</div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"priority_number\",\r\n            text: \"Priorty\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"img\",\r\n            text: \"Image\",\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                width={130}\r\n                                height={100}\r\n                                alt={record.type === 1 ? record.product_name : <a href={record.url} target=\"_blank\">{record.url}</a>}\r\n                                src={record.img}\r\n                            />\r\n                            <Figure.Caption>\r\n                                {record.type === 1 ? record.product_name : <a href={record.url} target=\"_blank\">{record.url}</a>}\r\n                            </Figure.Caption>\r\n                        </Figure></div>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 170,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Fragment>\r\n                            <button\r\n                                className=\"btn btn-xs btn-success\"\r\n                                onClick={e => editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-edit\"></i> Edit\r\n                        </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-xs\"\r\n                                onClick={() => deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i> Delete\r\n                        </button>\r\n                        </Fragment>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_banner',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n\r\n    const editRecord = (record) => {\r\n        setSelected({ ...record, imgUpload: record.img })\r\n        setShow(true);\r\n        setActionForm(\"EDIT_DATA\")\r\n        setErrMsg(errorValidate);\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n        setActionForm(\"DELETE_DATA\")\r\n    }\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    const getData = (queryString) => {\r\n        setLoadTbl(true);\r\n        BannerService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setBannerList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setBannerList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 400);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async (userPost) => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n        setErrMsg(errorValidate);\r\n        let _data = new FormData();\r\n        _data.append('id_banner', userPost.id_banner);\r\n        _data.append('type', userPost.type);\r\n        _data.append('priority_number', userPost.priority_number);\r\n        userPost.type === 1 ? _data.append('id_product', userPost.id_product) : _data.append('id_product', '');\r\n        userPost.type === 2 ? _data.append('url', userPost.url) : _data.append('url', '');\r\n        if (actionForm === \"ADD_DATA\") {\r\n            _data.append('img', userPost.img);\r\n            _data.append('id_operator', auth.user.id_operator);\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil ditambahkan</div>' }} />;\r\n        }\r\n        if (actionForm === \"EDIT_DATA\") {\r\n            _data.append('img', userPost.img);\r\n            _data.append('id_operator', auth.user.id_operator);\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong style=\"font-size:24px;\">Success</strong>, Data berhasil diubah</div>' }} />;\r\n        }\r\n        if (actionForm === \"DELETE_DATA\") {\r\n            _data = {};\r\n            _data = {\r\n                id_banner: selected.id_banner,\r\n                id_operator: auth.user.id_operator\r\n            }\r\n            contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n        }\r\n\r\n        await BannerService.postData(_data, actionForm).then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code === '06') {\r\n                setErrMsg({ priority_number: \"Number already exist\" });\r\n            }\r\n            if (err_code === '00') {\r\n                setShow(false);\r\n                setdeleteForm(false);\r\n                setErrMsg(contentSwal);\r\n                setshowSwalSuccess(true);\r\n            }\r\n\r\n\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            setErrMsg(error)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        var val = value;\r\n        setErrMsg(errorValidate);\r\n        if (event.target.name === \"img\") {\r\n            val = event.target.files[0];\r\n            setSelected({ ...selected, imgUpload: \"\", img: \"\" })\r\n            if (!val) return;\r\n            if (!val.name.match(/\\.(jpg|jpeg|png)$/)) {\r\n                setErrMsg({ img: \"Please select valid image(.jpg .jpeg .png)\" });\r\n                setLoading(true);\r\n                return;\r\n            }\r\n            if (val.size > 2099200) {\r\n                setErrMsg({ img: \"File size over 2MB\" });\r\n                setLoading(true);\r\n                return;\r\n            }\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(val);\r\n            reader.onloadend = () => {\r\n                setSelected({ ...selected, imgUpload: reader.result, img: val })\r\n            };\r\n        }\r\n        setSelected({\r\n            ...selected,\r\n            [name]: val\r\n        })\r\n    }\r\n\r\n    const onchangeSelect = (item) => {\r\n        setSelected({ ...selected, id_product: item.value, product_name: item.label })\r\n    };\r\n\r\n    const handleChangeNumberOnly = evt => {\r\n        const number = (evt.target.validity.valid) ? evt.target.value : selected.priority_number;\r\n        setSelected({ ...selected, priority_number: number })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        var fileSize = selected.img.size;\r\n        var error = null;\r\n        if (selected.type === null || selected.type === \"\") {\r\n            error = { ...error, type: \"Please select type\" };\r\n        }\r\n        if (selected.img) {\r\n            if (fileSize > 2099200) { // satuan bytes 2099200 => 2MB\r\n                error = { ...error, img: \"File size over 2MB\" };\r\n            }\r\n        }\r\n        setErrMsg(error);\r\n        if (!error) handleSave(selected);\r\n    }\r\n\r\n    const discardChanges = () => {\r\n        setActionForm(\"ADD_DATA\")\r\n        setSelected(initData);\r\n        setLoading(false);\r\n        setShow(true);\r\n        setErrMsg(errorValidate);\r\n    }\r\n\r\n    const frmUser = <Form id=\"myForm\">\r\n        <Form.Row>\r\n            <Form.Group controlId=\"id_banner\">\r\n                <Form.Control type=\"hidden\" defaultValue={selected.id_banner} />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"type\">\r\n                <Form.Label>Type</Form.Label>{errMsg.type ?\r\n                    (<span className=\"float-right text-error badge badge-danger\">{errMsg.type}</span>) : ''}\r\n                <Form.Control\r\n                    name=\"type\"\r\n                    size=\"sm\"\r\n                    as=\"select\"\r\n                    value={selected.type}\r\n                    onChange={handleChange}>\r\n                    <option value=\"\">- Type -</option>\r\n                    <option value=\"1\">Product Detail</option>\r\n                    <option value=\"2\">Website</option>\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"priority_number\">\r\n                <Form.Label>Priority Number</Form.Label>{errMsg.priority_number ?\r\n                    (<span className=\"float-right text-error badge badge-danger\">{errMsg.priority_number}</span>) : ''}\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"priority_number\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Priority Number\" />\r\n            </Form.Group>\r\n        </Form.Row>\r\n        {selected.type === 2 || selected.type === \"2\" ? (<Form.Group controlId=\"url\">\r\n            <Form.Label>URL</Form.Label>\r\n            <Form.Control\r\n                size=\"sm\"\r\n                type=\"text\"\r\n                name=\"url\"\r\n                value={selected.url}\r\n                onChange={handleChange}\r\n                placeholder=\"URL\" />\r\n        </Form.Group>) : ''}\r\n\r\n        {selected.type === 1 || selected.type === \"1\" ? (<Form.Group controlId=\"id_product\">\r\n            <Form.Label>Product</Form.Label>\r\n            <SelectProducts\r\n                myVal={selected.id_product ? ({ value: selected.id_product, label: selected.product_name }) : ''}\r\n                onChange={onchangeSelect} />\r\n        </Form.Group>) : ''}\r\n\r\n        <Form.Group controlId=\"image\">\r\n            <Form.Label>Image</Form.Label>{errMsg.img ?\r\n                (<span className=\"float-right text-error badge badge-danger\">{errMsg.img}</span>) : null}\r\n            <Form.File size=\"sm\" name=\"img\" setfieldvalue={selected.img} onChange={handleChange} />\r\n        </Form.Group>\r\n        {selected.imgUpload ? (<Form.Group controlId=\"imagePreview\">\r\n            <Figure>\r\n                <Figure.Image\r\n                    width={130}\r\n                    height={100}\r\n                    alt=\"\"\r\n                    src={selected.imgUpload}\r\n                />\r\n            </Figure>\r\n        </Form.Group>) : ''}\r\n    </Form>;\r\n\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Banner</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Button variant=\"success\" onClick={discardChanges}><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        {/* <ToastProvider\r\n                                            placement=\"bottom-right\" autoDismiss\r\n                                            autoDismissTimeout={2000}\r\n                                            TransitionState=\"exiting\"\r\n                                        >\r\n                                            <ToastDemo content=\"Data Berhasil disimpan\" />\r\n                                        </ToastProvider> */}\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n\r\n                                        {bannerList ? (<ReactDatatable\r\n                                            config={config}\r\n                                            records={bannerList}\r\n                                            columns={columns}\r\n                                            dynamic={true}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            loading={loadTbl}\r\n                                        />) : (<p>No Data...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={show}\r\n\r\n                    form={frmUser}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Add/Edit Banner\"\r\n                    titleButton=\"Save change\"\r\n                    themeButton=\"success\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSubmit}\r\n                ></AppModal>\r\n\r\n                {showSwalSuccess ? (<AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}                >\r\n                </AppSwalSuccess>) : ''}\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete User\"\r\n                    titleButton=\"Delete User\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(Banner);\r\n\r\n","import axios from \"axios\";\r\n\r\nlet API_URL = process.env.REACT_APP_URL_API;\r\n\r\nclass ProductService {\r\n    postData(param, action) {\r\n\r\n        switch (action) {\r\n            case \"GET_DATA\":\r\n                return axios.post(API_URL + \"/product\", param)\r\n            case \"ADD_DATA\":\r\n                return axios.post(API_URL + \"/simpan_product\", param)\r\n            case \"VIEW_DETAIL\":\r\n                return axios.post(API_URL + \"/product_detail\", param)\r\n            case \"DELETE_DATA\":\r\n                return axios.post(API_URL + \"/del_product\", param)\r\n            case \"GET_PRODUCT\":\r\n                API_URL += \"/product/?per_page=\" + param.per_page + \"&page_number=\" + param.page_number + \"&keyword=\" + param.keyword;\r\n                return axios.get(API_URL + param)\r\n            default:\r\n                return axios.post(API_URL + \"/product\", param)\r\n        }\r\n    }\r\n}\r\nexport default new ProductService()","import React, { Fragment } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport const TblProducts = props => {\r\n\r\n    const columns = [\r\n        {\r\n            key: \"no\",\r\n            text: \"No.\",\r\n            width: 20,\r\n            align: \"center\",\r\n            sortable: false,\r\n            cell: (row, index) => <div style={{ textAlign: \"center\" }}>\r\n                {((props.pageNumb - 1) * props.pageSize) + index + 1 + '.'}\r\n            </div>,\r\n            row: 0\r\n        },\r\n        {\r\n            key: \"product_name\",\r\n            text: \"Product\",\r\n            align: \"center\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            key: \"category_name\",\r\n            text: \"Category\",\r\n            align: \"center\",\r\n            sortable: true\r\n        },\r\n        {\r\n            key: \"harga\",\r\n            text: \"Harga\",\r\n            align: \"center\",\r\n            sortable: true,\r\n            width: 165,\r\n            cell: record => {\r\n                return (<Fragment>\r\n                    <NumberFormat\r\n                        value={record.harga}\r\n                        thousandSeparator={true}\r\n                        decimalScale={2}\r\n                        displayType={'text'}\r\n                    />\r\n                    <br /><b>Diskon Member</b> : {record.diskon_member > 0 ? (record.diskon_member + '%') : 0}</Fragment>)\r\n            }\r\n        },\r\n\r\n        {\r\n            key: \"qty\",\r\n            text: \"Stok\",\r\n            align: \"center\",\r\n            width: 70,\r\n            sortable: true,\r\n            cell: record => {\r\n                return (\r\n                    <NumberFormat\r\n                        value={record.qty}\r\n                        thousandSeparator={true}\r\n                        decimalScale={2}\r\n                        displayType={'text'}\r\n                    />\r\n                )\r\n            }\r\n        },\r\n        {\r\n            key: \"action\",\r\n            text: \"Action\",\r\n            width: 190,\r\n            sortable: false,\r\n            align: \"center\",\r\n            cell: record => {\r\n                return (\r\n                    <div style={{ textAlign: \"center\" }}>\r\n                        <Fragment>\r\n                            <button disabled\r\n                                className=\"btn btn-info btn-xs\"\r\n                                onClick={() => props.deleteRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-list\"></i> Image\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-xs btn-success\"\r\n                                onClick={() => props.editRecord(record)}\r\n                                style={{ marginRight: '5px' }}>\r\n                                <i className=\"fa fa-edit\"></i> Edit\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-danger btn-xs\"\r\n                                onClick={() => props.deleteRecord(record)}>\r\n                                <i className=\"fa fa-trash\"></i> Delete\r\n                            </button>\r\n\r\n                        </Fragment>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n    const config = {\r\n        key_column: 'id_product',\r\n        page_size: 10,\r\n        length_menu: [10, 20, 50],\r\n        show_filter: true,\r\n        show_pagination: true,\r\n        pagination: 'advance',\r\n        button: {\r\n            excel: false,\r\n            print: false\r\n        },\r\n        language: {\r\n            loading_text: \"Please be patient while data loads...\"\r\n        }\r\n    }\r\n    return (\r\n        <ReactDatatable\r\n            config={config}\r\n            records={props.records}\r\n            columns={columns}\r\n            dynamic={true}\r\n            onChange={props.onChange}\r\n            total_record={props.total_record}\r\n            loading={props.loadTbl}\r\n        />\r\n    )\r\n\r\n}","import React, { useState, useEffect } from 'react'\r\nimport Cookies from 'universal-cookie';\r\nimport { Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport ProductService from './ProductService';\r\nimport { TblProducts } from './TblProducts';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\n\r\nconst Product = (auth) => {\r\n    const [productList, setProductList] = useState([]);\r\n    const [totalData, setTotalData] = useState(0);\r\n    const [selected, setSelected] = useState({ id_product: '' });\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"product_name\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [deleteForm, setdeleteForm] = useState(false);\r\n    const [loadTbl, setLoadTbl] = useState(true);\r\n    const [showSwalSuccess, setshowSwalSuccess] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(null);\r\n    const history = useHistory();\r\n    const cookie = new Cookies();\r\n\r\n    const handleClose = () => {\r\n        setdeleteForm(false);\r\n    };\r\n\r\n    const closeSwal = () => {\r\n        setshowSwalSuccess(false);\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n    }\r\n    const getData = async (queryString) => {\r\n        cookie.remove('selectedIdCNI');\r\n        setLoadTbl(true);\r\n        await ProductService.postData(queryString)\r\n            .then(response => {\r\n                setTimeout(() => {\r\n                    if (response.data.err_code === \"00\") {\r\n                        setProductList(response.data.data);\r\n                        setTotalData(response.data.total_data);\r\n                    }\r\n                    if (response.data.err_code === \"04\") {\r\n                        setProductList([]);\r\n                        setTotalData(0);\r\n                    }\r\n                    setLoadTbl(false);\r\n                }, 300);\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            });\r\n    };\r\n\r\n    const handleSave = async () => {\r\n        let err_code = '';\r\n        let contentSwal = '-';\r\n        setLoading(true);\r\n\r\n        let _data = {\r\n            id_product: selected.id_product,\r\n            id_operator: auth.user.id_operator\r\n        }\r\n        contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil dihapus</div>' }} />;\r\n\r\n        await ProductService.postData(_data, \"DELETE_DATA\").then((res) => {\r\n            err_code = res.data.err_code;\r\n            setLoading(false);\r\n            if (err_code === '00') {\r\n                setErrMsg(contentSwal);\r\n                setdeleteForm(false);\r\n                setshowSwalSuccess(true);\r\n            }\r\n        }).catch((error) => {\r\n            setLoading(false);\r\n            //setErrMsg(error);\r\n            console.log(error);\r\n        });\r\n    };\r\n\r\n    const tableChangeHandler = (data) => {\r\n        Object.keys(data).map((key) => {\r\n            if (key === \"sort_order\" && data[key]) {\r\n                setSortOrder(data[key].order)\r\n                setSortColumn(data[key].column)\r\n            }\r\n            if (key === \"page_number\") {\r\n                setPageNumb(data[key])\r\n            }\r\n            if (key === \"page_size\") {\r\n                setPageSize(data[key])\r\n            }\r\n            if (key === \"filter_value\") {\r\n                setFilterValue(data[key])\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize,\r\n            type: 1\r\n        }\r\n        getData(param);\r\n\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const EditRecord = async (record) => {\r\n        await cookie.set('selectedIdCNI', record.id_product);\r\n        history.push('/edit_product');\r\n    }\r\n\r\n    const deleteRecord = (record) => {\r\n        setSelected(record)\r\n        setdeleteForm(true);\r\n    }\r\n    const contentDelete = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:18px; text-align:center;\">Apakah anda yakin <br/>menghapus data ini ?</div>' }} />;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Products</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n                                        <Link to=\"/add_product\"><Button variant=\"success\"><i className=\"fa fa-plus\"></i> Add</Button>\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        {productList ? (<TblProducts\r\n                                            records={productList}\r\n                                            onChange={tableChangeHandler}\r\n                                            total_record={totalData}\r\n                                            pageNumb={pageNumb}\r\n                                            pageSize={pageSize}\r\n                                            loading={loadTbl}\r\n                                            editRecord={EditRecord}\r\n                                            deleteRecord={deleteRecord}\r\n                                        />) : (<p>Loading...</p>)}\r\n                                    </div>\r\n\r\n                                </div>\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                <AppModal\r\n                    show={deleteForm}\r\n                    size=\"sm\"\r\n                    form={contentDelete}\r\n                    handleClose={handleClose}\r\n                    backdrop=\"static\"\r\n                    keyboard={false}\r\n                    title=\"Delete Product\"\r\n                    titleButton=\"Delete Product\"\r\n                    themeButton=\"danger\"\r\n                    isLoading={isLoading}\r\n                    formSubmit={handleSave}\r\n                ></AppModal>\r\n\r\n                {showSwalSuccess ? (<AppSwalSuccess\r\n                    show={showSwalSuccess}\r\n                    title={errMsg}\r\n                    type=\"success\"\r\n                    handleClose={closeSwal}                >\r\n                </AppSwalSuccess>) : ''}\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser,\r\n});\r\nexport default connect(mapStateToProps, '')(Product);","import React, { useState, Fragment, useEffect } from 'react'\r\nimport ReactDatatable from '@ashvin27/react-datatable';\r\n\r\nimport { Button, Form, Figure, Col } from 'react-bootstrap';\r\nimport AppModal from '../components/modal/MyModal';\r\nimport { connect } from 'react-redux';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\nimport Select from 'react-select';\r\nimport { SelectProducts } from '../components/modal/MySelect';\r\n\r\n\r\n\r\nconst Setting = (auth) => {\r\n\r\n    const initData = { id_banner: '', id_product: '', img: '', type: '', url: '', priority_number: '', imgUpload: '' };\r\n\r\n    const [selected, setSelected] = useState(initData);\r\n    const [pageNumb, setPageNumb] = useState(1);\r\n    const [pageSize, setPageSize] = useState(10);\r\n    const [sortOrder, setSortOrder] = useState(\"ASC\");\r\n    const [sortColumn, setSortColumn] = useState(\"priority_number\");\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    const getData = (queryString) => {\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleSave = async (userPost) => {\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n        const param = {\r\n            sort_order: sortOrder,\r\n            sort_column: sortColumn,\r\n            keyword: filterValue,\r\n            page_number: pageNumb,\r\n            per_page: pageSize\r\n        }\r\n        getData(param);\r\n\r\n    }, [pageNumb, pageSize, sortOrder, sortColumn, filterValue]);\r\n\r\n    const handleChange = event => {\r\n        const { name, value } = event.target\r\n        var val = value;\r\n\r\n\r\n        setSelected({\r\n            ...selected,\r\n            [name]: val\r\n        })\r\n    }\r\n\r\n    const handleChangeNumberOnly = evt => {\r\n        const number = (evt.target.validity.valid) ? evt.target.value : selected.priority_number;\r\n        setSelected({ ...selected, priority_number: number })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        var fileSize = selected.img.size;\r\n        var error = null;\r\n        if (selected.type === null || selected.type === \"\") {\r\n            error = { ...error, type: \"Please select type\" };\r\n        }\r\n        if (selected.img) {\r\n            if (fileSize > 2099200) { // satuan bytes 2099200 => 2MB\r\n                error = { ...error, img: \"File size over 2MB\" };\r\n            }\r\n        }\r\n        setErrMsg(error);\r\n        if (!error) handleSave(selected);\r\n    }\r\n    \r\n    const frmUser = <Form id=\"myForm\">\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"email\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Email\" />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"password\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Password\" />\r\n            </Form.Group>\r\n        </Form.Row>\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"call_center\">\r\n                <Form.Label>Call Center Number</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"call_center\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Call Center Number\" />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"contact_sms\">\r\n                <Form.Label>Contact SMS</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"contact_sms\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Contact SMS\" />\r\n            </Form.Group>\r\n        </Form.Row>\r\n\r\n        <Form.Row>\r\n            <Form.Group as={Col} controlId=\"contact_email\">\r\n                <Form.Label>Contact Email</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"contact_email\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Contact Email\" />\r\n            </Form.Group>\r\n            <Form.Group as={Col} controlId=\"contact_wa\">\r\n                <Form.Label>Contact WA</Form.Label>\r\n                <Form.Control\r\n                    size=\"sm\"\r\n                    name=\"contact_wa\"\r\n                    type=\"text\" pattern=\"[0-9]*\"\r\n                    onInput={handleChangeNumberOnly}\r\n                    value={selected.priority_number}\r\n                    onChange={handleChangeNumberOnly}\r\n                    placeholder=\"Contact WA\" />\r\n            </Form.Group>\r\n\r\n        </Form.Row>\r\n\r\n    </Form>;\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"content-wrapper\">\r\n                {/* Content Header (Page header) */}\r\n                <div className=\"content-header\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col-sm-6\">\r\n                                <h1 className=\"m-0\">Setting</h1>\r\n                            </div>{/* /.col */}\r\n\r\n                        </div>{/* /.row */}\r\n                    </div>{/* /.container-fluid */}\r\n                </div>\r\n                {/* /.content-header */}\r\n                {/* Main content */}\r\n                <section className=\"content\">\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                {/* card start */}\r\n                                <div className=\"card card-success shadow-lg\">\r\n                                    <div className=\"card-header\">\r\n\r\n                                    </div>\r\n\r\n                                    <div className=\"card-body\">\r\n                                        {frmUser}\r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n\r\n                                {/* /.card */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n\r\n\r\n\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    user: state.auth.currentUser\r\n});\r\nexport default connect(mapStateToProps, '')(Setting);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Button, Col, Figure, Form, Row } from 'react-bootstrap'\r\nimport { SelectCategory } from '../components/modal/MySelect';\r\nimport noImg from '../assets/noPhoto.jpg'\r\nimport { connect } from 'react-redux';\r\nimport moment from 'moment';\r\nimport \"moment/locale/id\"\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport NumberFormat from 'react-number-format';\r\nimport AppButton from '../components/button/Button';\r\nimport ProductService from './ProductService';\r\nimport { AppSwalSuccess } from '../components/modal/SwalSuccess';\r\nimport Cookies from 'universal-cookie';\r\nimport { Link } from 'react-router-dom';\r\nconst cookie = new Cookies();\r\n//https://www.npmjs.com/package/react-datetime\r\n\r\nvar yesterday = moment().subtract(1, 'day');\r\nvar valid_startDate = function (current) {\r\n    return current.isAfter(yesterday);\r\n};\r\n\r\nclass ProductForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.initialState = {\r\n            id_product: '',\r\n            product_name: '',\r\n            id_category: '',\r\n            category_name: '',\r\n            harga: '',\r\n            deskripsi: '',\r\n            berat: '',\r\n            kondisi: '',\r\n            min_pembelian: '',\r\n            video_url: '',\r\n            img: '',\r\n            imgUpload: '',\r\n            diskon_member: '',\r\n            qty: '',\r\n            special_promo: '',\r\n            start_date: '',\r\n            end_date: '',\r\n            id_operator: ''\r\n        }\r\n        this.state = {\r\n            validSd: valid_startDate,\r\n            validEd: valid_startDate,\r\n            isLoading: false,\r\n            showSwalSuccess: false,\r\n            errMsg: this.initialState,\r\n            validated: false,\r\n            isEdit: false,\r\n            id_product: '',\r\n            product_name: '',\r\n            id_category: '',\r\n            category_name: '',\r\n            harga: '',\r\n            deskripsi: '',\r\n            berat: '',\r\n            kondisi: '',\r\n            min_pembelian: '',\r\n            video_url: '',\r\n            img: '',\r\n            imgUpload: noImg,\r\n            diskon_member: '',\r\n            qty: '',\r\n            special_promo: '',\r\n            start_date: '',\r\n            end_date: '',\r\n            id_operator: ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.onchangeSelect = this.onchangeSelect.bind(this);\r\n        this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\r\n        this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\r\n        this.closeSwal = this.closeSwal.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const pathName = this.props.location.pathname.replace('/', '');\r\n        const selectedIdCNI = cookie.get('selectedIdCNI');\r\n        if (pathName === 'edit_product' && (selectedIdCNI > 0 || !selectedIdCNI)) {\r\n            this.setState({ isEdit: true });\r\n            this.getData();\r\n        }\r\n\r\n        this.setState({ id_operator: this.props.user.id_operator });\r\n    }\r\n\r\n    getData = async () => {\r\n        const selectedIdCNI = cookie.get('selectedIdCNI');\r\n        const queryString = { id_product: selectedIdCNI }\r\n        this.setState({ isLoading: true });\r\n        await ProductService.postData(queryString, 'VIEW_DETAIL')\r\n            .then(response => {\r\n                if (response.data.err_code === \"00\") {\r\n                    const dtRes = response.data.data;\r\n                    Object.keys(this.initialState).map((key) => {                        \r\n                        this.setState({ [key]: dtRes[key] });\r\n                        this.setState({ imgUpload: dtRes.img });\r\n                        this.setState({ img: '' });\r\n                        this.setState({ isLoading: false });\r\n                        return 1;\r\n                    });\r\n                }\r\n                if (response.data.err_code === \"04\") {\r\n                    console.log(response.data.data);\r\n                    this.setState({ isLoading: false });\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    handleChangeStartDate(date) {\r\n        const selectedDate = new Date(date);\r\n        const _date = moment(selectedDate).format('YYYY-MM-DD HH:mm');\r\n        this.setState({ start_date: _date })\r\n        if (!this.state.id_operator) this.setState({ id_operator: this.props.user.id_operator });\r\n    }\r\n    handleChangeEndDate(date) {\r\n        const selectedDate = new Date(date);\r\n        const _date = moment(selectedDate).format('YYYY-MM-DD HH:mm');\r\n        this.setState({ end_date: _date });\r\n        if (!this.state.id_operator) this.setState({ id_operator: this.props.user.id_operator });\r\n    }\r\n    handleChange(evt) {\r\n        const name = evt.target.name;\r\n        var value = evt.target.value;\r\n        this.setState({ isLoading: false })\r\n        this.setState({ errMsg: { img: \"\" } })\r\n        if (evt.target.name === \"img\") {\r\n            value = evt.target.files[0];\r\n            this.setState({ img: '' })\r\n            if (!value) return;\r\n            if (!value.name.match(/\\.(jpg|jpeg|png)$/)) {\r\n                this.setState({ errMsg: { img: \"Extension Invalid\" } })\r\n                this.setState({ isLoading: true })\r\n                return;\r\n            }\r\n            if (value.size > 2099200) {\r\n                this.setState({ errMsg: { img: \"File size over 2MB\" } })\r\n                this.setState({ isLoading: true })\r\n                return;\r\n            }\r\n            let reader = new FileReader();\r\n            reader.readAsDataURL(value);\r\n            reader.onloadend = () => {\r\n                this.setState({ img: value, imgUpload: reader.result })\r\n            };\r\n        }\r\n        if (name === 'special_promo') {\r\n            value = evt.target.checked ? 1 : 0;\r\n        }\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n        //this.setState({ id_operator: this.props.user.id_operator });\r\n        if (!this.state.id_operator) this.setState({ id_operator: this.props.user.id_operator });\r\n    }\r\n    onchangeSelect(evt) {\r\n        this.setState({ id_category: evt.value, category_name: evt.label })\r\n        if (!this.state.id_operator) this.setState({ id_operator: this.props.user.id_operator });\r\n    };\r\n\r\n    handleSubmit(evt) {\r\n        const form = evt.currentTarget;\r\n        this.setState({ isLoading: true });\r\n        if (form.checkValidity() === false) {\r\n            //if (!this.state.img) this.setState({ ...this, errMsg: { ...this, img: \"Image Required\" } })\r\n            if (!this.state.id_category) this.setState({ ...this, errMsg: { ...this, id_category: \"Required\" } })\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n        //if (!this.state.img) this.setState({ ...this, errMsg: { ...this, img: \"Image Required\" } })\r\n        if (!this.state.id_category) this.setState({ ...this, errMsg: { ...this, id_category: \"Required\" } })\r\n        if ((!this.state.id_category)) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n        }\r\n        this.setState({ validated: true })\r\n        let err_code = '';\r\n        let _data = new FormData();\r\n        Object.keys(this.initialState).map((key) => {\r\n            _data.append(key, this.state[key]);\r\n            return 1;\r\n        });\r\n        ProductService.postData(_data, 'ADD_DATA').then((res) => {\r\n            err_code = res.data.err_code;\r\n            if (err_code === '00') {\r\n                this.setState({ showSwalSuccess: true })\r\n            } else {\r\n                console.log(res.data);\r\n            }\r\n        }).catch((error) => {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n            this.setState({ isLoading: true, validated: false })\r\n        });\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n    }\r\n\r\n    closeSwal() {\r\n        this.setState({ showSwalSuccess: false })\r\n        Object.keys(this.initialState).map((key) => {\r\n            this.setState({ [key]: '' })\r\n            this.setState({ isLoading: false });\r\n            return 1;\r\n        });\r\n        this.props.history.push('/products');\r\n    }\r\n\r\n    render() {\r\n        \r\n        \r\n        let contentSwal = <div dangerouslySetInnerHTML={{ __html: '<div style=\"font-size:20px; text-align:center;\"><strong>Success</strong>, Data berhasil disimpan</div>' }} />;\r\n        const withValueCap = (inputObj) => {\r\n            const { value } = inputObj;\r\n            if (value <= 100) return inputObj;\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"content-wrapper\">\r\n                    {/* Content Header (Page header) */}\r\n                    <div className=\"content-header\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row mb-2\">\r\n                                <div className=\"col-sm-6\">\r\n                                    <h1 className=\"m-0\">{this.state.isEdit ? (\"Edit Product\") : \"Add Product\"}</h1>\r\n                                </div>{/* /.col */}\r\n\r\n                            </div>{/* /.row */}\r\n                        </div>{/* /.container-fluid */}\r\n                    </div>\r\n                    {/* /.content-header */}\r\n                    {/* Main content */}\r\n                    <section className=\"content\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    {/* card start */}\r\n                                    <div className=\"card shadow-lg\">\r\n                                        <Form noValidate validated={this.state.validated} onSubmit={this.handleSubmit}>\r\n                                            <div className=\"card-body my-card-body\">\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} controlId=\"product_name\">\r\n                                                        <Form.Label>Product Name</Form.Label>\r\n                                                        <Form.Control\r\n                                                            value={this.state.product_name}\r\n                                                            autoComplete=\"off\"\r\n                                                            onChange={this.handleChange}\r\n                                                            size=\"sm\"\r\n                                                            name=\"product_name\"\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            placeholder=\"Product Name\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            <span className=\"badge badge-danger\">Product Name is Required</span>\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"berat\">\r\n                                                        <Form.Label>Weight(Gram)</Form.Label>\r\n                                                        <NumberFormat\r\n                                                            name=\"berat\"\r\n                                                            onChange={this.handleChange}\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            value={this.state.berat}\r\n                                                            thousandSeparator={true}\r\n                                                            decimalScale={2}\r\n                                                            inputMode=\"numeric\"\r\n                                                            required\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Weight(Gram)\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            <span className=\"badge badge-danger\">Weight is Required</span>\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"harga\">\r\n                                                        <Form.Label>Price</Form.Label>\r\n                                                        <NumberFormat\r\n                                                            onChange={this.handleChange}\r\n                                                            name=\"harga\"\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            value={this.state.harga}\r\n                                                            thousandSeparator={true}\r\n                                                            decimalScale={2}\r\n                                                            inputMode=\"numeric\"\r\n                                                            required\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Price\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            <span className=\"badge badge-danger\">Price is Required</span>\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"diskon_member\">\r\n                                                        <Form.Label>Discount Member(%)</Form.Label>\r\n                                                        <NumberFormat\r\n                                                            onChange={this.handleChange}\r\n                                                            name=\"diskon_member\"\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            value={this.state.diskon_member}\r\n                                                            thousandSeparator={true}\r\n                                                            decimalScale={2}\r\n                                                            inputMode=\"numeric\"\r\n                                                            isAllowed={withValueCap}\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Disc. Member(%)\" />\r\n\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} xs={3} controlId=\"category\">\r\n                                                        <Form.Label>Category</Form.Label>\r\n                                                        <SelectCategory required\r\n                                                            myVal={this.state.id_category ? ({ value: this.state.id_category, label: this.state.category_name }) : ''}\r\n                                                            onChange={this.onchangeSelect}\r\n                                                            feedback=\"Required\"\r\n                                                        />\r\n                                                        {this.state.errMsg.id_category ? (<span className=\"text-error badge badge-danger\">{this.state.errMsg.id_category}</span>) : ''}\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={3} controlId=\"kondisi\">\r\n                                                        <Form.Label>Kondisi</Form.Label>\r\n                                                        <Form.Control\r\n                                                            value={this.state.kondisi}\r\n                                                            onChange={this.handleChange}\r\n                                                            size=\"sm\"\r\n                                                            name=\"kondisi\"\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Kondisi\" />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"start_date\">\r\n                                                        <Form.Label>Start Date</Form.Label>                                                        \r\n                                                        <Datetime\r\n                                                            setViewDate={this.state.start_date ? (new Date(this.state.start_date)) : ''}\r\n                                                            value={this.state.start_date ? (new Date(this.state.start_date)) : ''}\r\n                                                            onChange={this.handleChangeStartDate}\r\n                                                            inputProps={{\r\n                                                                autoComplete: \"off\",\r\n                                                                placeholder: 'Start Date',\r\n                                                                name: 'start_date',\r\n                                                                className: 'form-control form-control-sm'\r\n                                                            }}\r\n                                                            locale=\"id\" isValidDate={this.state.validSd}\r\n                                                        />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"end_date\">\r\n                                                        <Form.Label>End Date</Form.Label>\r\n                                                        <Datetime\r\n                                                            setViewDate={this.state.end_date ? (new Date(this.state.end_date)) : ''}\r\n                                                            value={this.state.end_date ? (new Date(this.state.end_date)) : ''}\r\n                                                            onChange={this.handleChangeEndDate}\r\n                                                            inputProps={{\r\n                                                                placeholder: 'End Date', autoComplete: \"off\",\r\n                                                                name: 'end_date', className: 'form-control form-control-sm'\r\n                                                            }}\r\n                                                            locale=\"id\" isValidDate={this.state.validSd}\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"qty\">\r\n                                                        <Form.Label>Quantity</Form.Label>\r\n                                                        <NumberFormat\r\n                                                            onChange={this.handleChange}\r\n                                                            name=\"qty\"\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            value={this.state.qty}\r\n                                                            thousandSeparator={true}\r\n                                                            decimalScale={2}\r\n                                                            inputMode=\"numeric\"\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Quantity\" />\r\n                                                    </Form.Group>\r\n\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} controlId=\"video_url\">\r\n                                                        <Form.Label>URL Video</Form.Label>\r\n                                                        <Form.Control\r\n                                                            value={this.state.video_url}\r\n                                                            onChange={this.handleChange}\r\n                                                            size=\"sm\"\r\n                                                            name=\"video_url\"\r\n                                                            type=\"text\"\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"URL Video\" />\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"min_pembelian\">\r\n                                                        <Form.Label>Min. Pembelian</Form.Label>\r\n                                                        <NumberFormat\r\n                                                            onChange={this.handleChange}\r\n                                                            name=\"min_pembelian\"\r\n                                                            className=\"form-control form-control-sm\"\r\n                                                            value={this.state.min_pembelian}\r\n                                                            thousandSeparator={true}\r\n                                                            decimalScale={2}\r\n                                                            inputMode=\"numeric\"\r\n                                                            autoComplete=\"off\"\r\n                                                            placeholder=\"Min. Pembelian\" />\r\n\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"special_promo\">\r\n                                                        <Form.Label>Special Promo</Form.Label>\r\n                                                        <Row>\r\n                                                            <Col xs={{ span: 1, offset: 3 }}>\r\n                                                                <Form.Check\r\n                                                                    onChange={this.handleChange}\r\n                                                                    checked={this.state.special_promo > 0 ? (\"checked\") : \"\"}\r\n                                                                    label={this.state.special_promo > 0 ? (\"Yes\") : \"No\"}\r\n                                                                    type=\"switch\"\r\n                                                                    name=\"special_promo\"\r\n                                                                    custom\r\n                                                                />\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Form.Group>\r\n\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} controlId=\"deskripsi\">\r\n                                                        <Form.Label>Description</Form.Label>\r\n                                                        <Form.Control\r\n                                                            defaultValue={this.state.deskripsi}\r\n                                                            required\r\n                                                            onChange={this.handleChange} size=\"sm\"\r\n                                                            name=\"deskripsi\" as=\"textarea\"\r\n                                                            rows={9} placeholder=\"Description\" />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            <span className=\"badge badge-danger\">Required</span>\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"img\">\r\n                                                        <Form.Label>Image</Form.Label>\r\n                                                        {this.state.errMsg.img ? (<span className=\"float-right text-error badge badge-danger\">{this.state.errMsg.img}</span>) : ''}\r\n                                                        <Form.File\r\n                                                            setfieldvalue={this.state.img}\r\n                                                            onChange={this.handleChange}\r\n                                                            size=\"sm\"\r\n                                                            name=\"img\"\r\n                                                            style={{ \"color\": \"rgba(0, 0, 0, 0)\" }} />\r\n                                                        <Form.Text className=\"text-muted\">\r\n                                                            - Extension .jpg, .jpeg, .png <br />- Maks. Size 2MB\r\n                                                        </Form.Text>\r\n\r\n                                                    </Form.Group>\r\n\r\n                                                    <Form.Group as={Col} xs={2} controlId=\"imagePreview\">\r\n                                                        <Form.Label style={{ \"color\": \"rgba(0, 0, 0, 0)\" }}>-----</Form.Label>\r\n                                                        <Figure>\r\n                                                            <Figure.Image\r\n                                                                width={130}\r\n                                                                height={100}\r\n                                                                alt=\"\"\r\n                                                                src={this.state.imgUpload}\r\n                                                            />\r\n                                                        </Figure>\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n                                            </div>\r\n\r\n                                            <div className=\"card-footer\">\r\n                                                <Link to=\"/products\">\r\n                                                    <Button variant=\"danger\">Cancel</Button>{' '}\r\n                                                </Link>\r\n                                                <AppButton\r\n                                                    isLoading={this.state.isLoading}\r\n                                                    type=\"submit\"\r\n                                                    theme=\"success\">\r\n                                                    Simpan\r\n                                                </AppButton>\r\n                                            </div>\r\n                                        </Form>\r\n                                    </div>\r\n\r\n\r\n                                    {/* /.card */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {this.state.showSwalSuccess ? (<AppSwalSuccess\r\n                        show={this.state.showSwalSuccess}\r\n                        title={contentSwal}\r\n                        type=\"success\"\r\n                        handleClose={this.closeSwal}                >\r\n                    </AppSwalSuccess>) : ''}\r\n\r\n\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({ user: state.auth.currentUser });\r\n\r\nexport default connect(mapStateToProps, '')(ProductForm);\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Header from './Header'\r\nimport MenuSidebar from './MenuSidebar'\r\nimport { connect } from 'react-redux';\r\nimport UserList from '../../users/UserList';\r\nimport { getProfileAdmin } from '../login/LoginService';\r\nimport Members from '../../members/Members';\r\nimport Konsumen from '../../members/Konsumen';\r\nimport Category from '../../category/Category';\r\nimport Banner from '../../banners/Banner';\r\nimport Product from '../../products/Product';\r\nimport Setting from '../../settings/Setting';\r\nimport ProductForm from '../../products/ProductForm';\r\n\r\nconst Main = ({ onUserLoad }) => {\r\n\r\n    const [appLoadingState, updateAppLoading] = useState(false);\r\n    const [menusidebarState, updateMenusidebarState] = useState({\r\n        isMenuSidebarCollapsed: false\r\n    });\r\n\r\n    const toggleMenuSidebar = () => {\r\n        updateMenusidebarState({\r\n            isMenuSidebarCollapsed: !menusidebarState.isMenuSidebarCollapsed\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateAppLoading(true);\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const response = await getProfileAdmin();\r\n                onUserLoad({ ...response });\r\n                updateAppLoading(false);\r\n            } catch (error) {\r\n                updateAppLoading(false);\r\n            }\r\n        };\r\n        fetchProfile();\r\n        updateAppLoading(false);\r\n        return () => { };\r\n    }, [onUserLoad]);\r\n\r\n    document.getElementById('root').classList.remove('login-page');\r\n    document.getElementById('root').classList.remove('hold-transition');\r\n\r\n    document.getElementById('root').className += ' sidebar-mini';\r\n\r\n    if (menusidebarState.isMenuSidebarCollapsed) {\r\n        document.getElementById('root').classList.add('sidebar-collapse');\r\n        document.getElementById('root').classList.remove('sidebar-open');\r\n        document.getElementById('root').classList.add('active');\r\n    } else {\r\n        document.getElementById('root').classList.remove('active');\r\n        document.getElementById('root').classList.add('sidebar-open');\r\n        document.getElementById('root').classList.remove('sidebar-collapse');\r\n    }\r\n\r\n    let template;\r\n    const getBasename = path => path.substr(0, path.lastIndexOf('/'));\r\n    if (appLoadingState) {\r\n        template = 'Running ....';\r\n    } else {\r\n        template = (\r\n            <>\r\n                <Header toggleMenuSidebar={toggleMenuSidebar} />\r\n\r\n                <MenuSidebar />\r\n            \r\n                <Switch basename={getBasename(window.location.pathname)}>\r\n                    <Route path=\"/users\" component={UserList} />\r\n                    <Route path=\"/konsumen\" component={Konsumen} />\r\n                    <Route path=\"/category\" component={Category} />\r\n                    <Route path=\"/products\" component={Product} />\r\n                    <Route path=\"/banners\" component={Banner} />\r\n                    <Route exact path=\"/\" component={Banner} />\r\n                    <Route path=\"/members\" component={Members} />\r\n                    <Route path=\"/setting\" component={Setting} />\r\n                    <Route path=\"/add_product\" component={ProductForm}/>\r\n                    <Route path=\"/edit_product\" component={ProductForm}/>\r\n                </Switch>\r\n            </>\r\n        );\r\n    }\r\n\r\n    return template;\r\n};\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    onUserLoad: (user) =>\r\n        dispatch({ type: \"LOAD_USER\", currentUser: user })\r\n});\r\n\r\nexport default connect('', mapDispatchToProps)(Main);\r\n","import { loginAdmin } from '../components/login/LoginService'\nexport const loginByAuth = async (username, password) => {\n    const token = await loginAdmin(username,password);\n    localStorage.setItem('tokenCNI', token);\n    document.getElementById('root').classList.remove('login-page');\n    document.getElementById('root').classList.remove('hold-transition');\n    return token;\n};\n\n// export const registerByAuth = async (email, password) => {\n//     const token = await Gatekeeper.registerByAuth(email, password);\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('register-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// export const loginByGoogle = async () => {\n//     const token = await Gatekeeper.loginByGoogle();\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('login-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// export const registerByGoogle = async () => {\n//     const token = await Gatekeeper.registerByGoogle();\n//     localStorage.setItem('token', token);\n//     document.getElementById('root').classList.remove('register-page');\n//     document.getElementById('root').classList.remove('hold-transition');\n//     return token;\n// };\n\n// const asyncFacebookGetLoginStatus = () => {\n//     return new Promise((resolve, reject) => {\n//         addFacebookScript()\n//             .then(() => {\n//                 const params = {\n//                     appId: '243170807046422',\n//                     cookie: false,\n//                     xfbml: false,\n//                     version: 'v3.2'\n//                 };\n//                 window.FB.init(params);\n//                 window.FB.getLoginStatus((data) => {\n//                     if (data.status === 'connected') {\n//                         resolve(data.authResponse.accessToken);\n//                     }\n//                     resolve(null);\n//                 });\n//             })\n//             .catch(() => reject(new Error('ADD_SCRIPT_ERROR')));\n//     });\n// };\n\n// const asyncFacebookLogin = () => {\n//     return new Promise((resolve, reject) => {\n//         window.FB.login(\n//             (data) => {\n//                 if (data.status === 'connected') {\n//                     resolve(data.authResponse.accessToken);\n//                 }\n//                 reject(new Error('FACEBOOK_ERROR'));\n//             },\n//             {scope: 'email'}\n//         );\n//     });\n// };\n\n// export const loginByFacebook = () => {\n//     return asyncFacebookGetLoginStatus()\n//         .then((accessToken) => {\n//             if (accessToken) {\n//                 return Promise.resolve(accessToken);\n//             }\n//             return asyncFacebookLogin();\n//         })\n//         .then((accessToken) => {\n//             return axios.post('/v1/facebook/login', {\n//                 accessToken\n//             });\n//         })\n//         .then((response) => {\n//             localStorage.setItem('token', response.data.token);\n//             document.getElementById('root').classList.remove('login-page');\n//             document.getElementById('root').classList.remove('hold-transition');\n//             return Promise.resolve(response.data.token);\n//         });\n// };\n\n// export const registerByFacebook = () => {\n//     return asyncFacebookGetLoginStatus()\n//         .then((accessToken) => {\n//             if (accessToken) {\n//                 return Promise.resolve(accessToken);\n//             }\n//             return asyncFacebookLogin();\n//         })\n//         .then((accessToken) => {\n//             return axios.post('/v1/facebook/register', {\n//                 accessToken\n//             });\n//         })\n//         .then((response) => {\n//             localStorage.setItem('token', response.data.token);\n//             document.getElementById('root').classList.remove('register-page');\n//             document.getElementById('root').classList.remove('hold-transition');\n//             return Promise.resolve(response.data.token);\n//         });\n// };\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { connect } from 'react-redux';\n\nimport * as AuthService from '../../services/auth';\nimport Button from '../../components/button/Button';\n\nconst Login = ({ onUserLogin }) => {\n    const [isAuthLoading, setAuthLoading] = useState(false);\n    const [errMsg, setErrMsg] = useState('');\n    const history = useHistory();\n\n    const login = (username, password) => {\n        setAuthLoading(true);\n        setErrMsg(null);\n        AuthService.loginByAuth(username, password)\n            .then((token) => {\n                if (token) {\n                    //console.log(token);\n                    //toast.success('Login is succeed!');\n                    setAuthLoading(false);\n                    onUserLogin(token);\n                    history.push('/');\n                } else {\n                    setErrMsg('Username dan Password tidak sesuai')\n                    setAuthLoading(false);\n                }\n            })\n            .catch((error) => {\n                setAuthLoading(false);\n                setErrMsg(error)\n                // toast.error(\n                //     (error.response &&\n                //         error.response.data &&\n                //         error.response.data.message) ||\n                //     ''\n                //);\n            });\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            username: '',\n            pass: ''\n        },\n        validationSchema: Yup.object({\n            username: Yup.string()\n                .required('Please enter username'),\n            pass: Yup.string()\n                .required('Please provide a password')\n        }),\n        onSubmit: (values) => {\n            login(values.username, values.pass);\n        }\n    });\n    const hideAlert = () => { setErrMsg(null) }\n    document.getElementById('root').classList = 'hold-transition login-page';\n\n    return (\n        <div className=\"login-box\">\n            <div className=\"card card-outline card-primary\">\n                <div className=\"card-header text-center h1\">\n                    <b>CNI</b>\n                </div>\n                <div className=\"card-body\">\n\n                    {errMsg ? (\n                        <div className=\"alert alert-danger alert-sm\">\n                            <button onClick={hideAlert} type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\">×</button>\n                            <span className=\"fw-semi-bold text-error-login\">Error: {errMsg}</span>\n                        </div>\n                    ) : (<p className='login-box-msg'>Sign in to start your session</p>)}\n\n                    <form onSubmit={formik.handleSubmit}>\n                        {formik.touched.username && formik.errors.username ? (\n                            <span className=\"float-right text-error badge badge-danger\">{formik.errors.username}</span>\n                        ) : null}\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Username\"\n                                {...formik.getFieldProps('username')} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-user\" />\n                                </div>\n                            </div>\n\n                        </div>\n\n                        {formik.touched.pass &&\n                            formik.errors.pass ? (\n                            <span className=\"float-right text-error badge badge-danger\">{formik.errors.pass}</span>\n                        ) : null}\n                        <div className=\"input-group mb-3\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Password\"\n                                {...formik.getFieldProps('pass')} />\n                            <div className=\"input-group-append\">\n                                <div className=\"input-group-text\">\n                                    <span className=\"fas fa-lock\" />\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"social-auth-links text-center mt-2 mb-3\">\n                            <Button\n                                block\n                                type=\"submit\"\n                                isLoading={isAuthLoading}\n                                icon=\"sign\"\n                                theme=\"primary\"\n                            >\n                                Sign in\n                        </Button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n\n    )\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    onUserLogin: (token) => dispatch({ type: \"LOGIN_USER\", token })\n});\n\nexport default connect(null, mapDispatchToProps)(Login);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nconst ProtectedRoute = ({ children, isLoggedIn, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n    \r\n};\r\n\r\nconst mapStateToProps = (state) => ({    \r\n    isLoggedIn: state.auth.isLoggedIn\r\n});\r\n\r\nexport default connect(mapStateToProps)(ProtectedRoute);","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nconst PublicRoute = ({children, isLoggedIn, ...rest}) => {\n    const isAuthenticated = isLoggedIn || localStorage.getItem('token');\n\n    return (\n        <Route\n            {...rest}\n            render={({location}) =>\n                isAuthenticated ? (\n                    <Redirect\n                        to={{\n                            pathname: '/',\n                            state: {from: location}\n                        }}\n                    />\n                ) : (\n                    children\n                )\n            }\n        />\n    );\n};\n\nconst mapStateToProps = (state) => ({\n    isLoggedIn: state.auth.isLoggedIn\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import Main from '../src/components/main/Main'\nimport Login from '../src/components/login/Login';\nimport { BrowserRouter as Router, Redirect,Switch, Route } from 'react-router-dom';\nimport ProtectedRoute from './router/ProtectedRoute';\nimport PublicRoute from './router/PublicRoute';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default function App() {  \n  const getBasename = path => path.substr(0, path.lastIndexOf('/'));\n  return (\n    <Router basename={getBasename(window.location.pathname)}>\n      <Switch>\n        <PublicRoute exact path=\"/login\">\n          <Login />\n        </PublicRoute>\n        <ProtectedRoute path=\"/\">\n          <Main />\n        </ProtectedRoute>\n        <Redirect from=\"*\" to=\"/\" />\n        {/* <Route component={Main} /> */}\n      </Switch>\n    </Router>\n\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from '../src/store'\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}